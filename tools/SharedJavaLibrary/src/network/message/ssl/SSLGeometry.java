// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages_robocup_ssl_geometry.proto

package network.message.ssl;

public final class SSLGeometry {
  private SSLGeometry() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class SSL_GeometryFieldSize extends
      com.google.protobuf.GeneratedMessage {
    // Use SSL_GeometryFieldSize.newBuilder() to construct.
    private SSL_GeometryFieldSize() {
      initFields();
    }
    private SSL_GeometryFieldSize(boolean noInit) {}
    
    private static final SSL_GeometryFieldSize defaultInstance;
    public static SSL_GeometryFieldSize getDefaultInstance() {
      return defaultInstance;
    }
    
    public SSL_GeometryFieldSize getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return network.message.ssl.SSLGeometry.internal_static_proto_SSL_GeometryFieldSize_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return network.message.ssl.SSLGeometry.internal_static_proto_SSL_GeometryFieldSize_fieldAccessorTable;
    }
    
    // required int32 line_width = 1;
    public static final int LINE_WIDTH_FIELD_NUMBER = 1;
    private boolean hasLineWidth;
    private int lineWidth_ = 0;
    public boolean hasLineWidth() { return hasLineWidth; }
    public int getLineWidth() { return lineWidth_; }
    
    // required int32 field_length = 2;
    public static final int FIELD_LENGTH_FIELD_NUMBER = 2;
    private boolean hasFieldLength;
    private int fieldLength_ = 0;
    public boolean hasFieldLength() { return hasFieldLength; }
    public int getFieldLength() { return fieldLength_; }
    
    // required int32 field_width = 3;
    public static final int FIELD_WIDTH_FIELD_NUMBER = 3;
    private boolean hasFieldWidth;
    private int fieldWidth_ = 0;
    public boolean hasFieldWidth() { return hasFieldWidth; }
    public int getFieldWidth() { return fieldWidth_; }
    
    // required int32 boundary_width = 4;
    public static final int BOUNDARY_WIDTH_FIELD_NUMBER = 4;
    private boolean hasBoundaryWidth;
    private int boundaryWidth_ = 0;
    public boolean hasBoundaryWidth() { return hasBoundaryWidth; }
    public int getBoundaryWidth() { return boundaryWidth_; }
    
    // required int32 referee_width = 5;
    public static final int REFEREE_WIDTH_FIELD_NUMBER = 5;
    private boolean hasRefereeWidth;
    private int refereeWidth_ = 0;
    public boolean hasRefereeWidth() { return hasRefereeWidth; }
    public int getRefereeWidth() { return refereeWidth_; }
    
    // required int32 goal_width = 6;
    public static final int GOAL_WIDTH_FIELD_NUMBER = 6;
    private boolean hasGoalWidth;
    private int goalWidth_ = 0;
    public boolean hasGoalWidth() { return hasGoalWidth; }
    public int getGoalWidth() { return goalWidth_; }
    
    // required int32 goal_depth = 7;
    public static final int GOAL_DEPTH_FIELD_NUMBER = 7;
    private boolean hasGoalDepth;
    private int goalDepth_ = 0;
    public boolean hasGoalDepth() { return hasGoalDepth; }
    public int getGoalDepth() { return goalDepth_; }
    
    // required int32 goal_wall_width = 8;
    public static final int GOAL_WALL_WIDTH_FIELD_NUMBER = 8;
    private boolean hasGoalWallWidth;
    private int goalWallWidth_ = 0;
    public boolean hasGoalWallWidth() { return hasGoalWallWidth; }
    public int getGoalWallWidth() { return goalWallWidth_; }
    
    // required int32 center_circle_radius = 9;
    public static final int CENTER_CIRCLE_RADIUS_FIELD_NUMBER = 9;
    private boolean hasCenterCircleRadius;
    private int centerCircleRadius_ = 0;
    public boolean hasCenterCircleRadius() { return hasCenterCircleRadius; }
    public int getCenterCircleRadius() { return centerCircleRadius_; }
    
    // required int32 defense_radius = 10;
    public static final int DEFENSE_RADIUS_FIELD_NUMBER = 10;
    private boolean hasDefenseRadius;
    private int defenseRadius_ = 0;
    public boolean hasDefenseRadius() { return hasDefenseRadius; }
    public int getDefenseRadius() { return defenseRadius_; }
    
    // required int32 defense_stretch = 11;
    public static final int DEFENSE_STRETCH_FIELD_NUMBER = 11;
    private boolean hasDefenseStretch;
    private int defenseStretch_ = 0;
    public boolean hasDefenseStretch() { return hasDefenseStretch; }
    public int getDefenseStretch() { return defenseStretch_; }
    
    // required int32 free_kick_from_defense_dist = 12;
    public static final int FREE_KICK_FROM_DEFENSE_DIST_FIELD_NUMBER = 12;
    private boolean hasFreeKickFromDefenseDist;
    private int freeKickFromDefenseDist_ = 0;
    public boolean hasFreeKickFromDefenseDist() { return hasFreeKickFromDefenseDist; }
    public int getFreeKickFromDefenseDist() { return freeKickFromDefenseDist_; }
    
    // required int32 penalty_spot_from_field_line_dist = 13;
    public static final int PENALTY_SPOT_FROM_FIELD_LINE_DIST_FIELD_NUMBER = 13;
    private boolean hasPenaltySpotFromFieldLineDist;
    private int penaltySpotFromFieldLineDist_ = 0;
    public boolean hasPenaltySpotFromFieldLineDist() { return hasPenaltySpotFromFieldLineDist; }
    public int getPenaltySpotFromFieldLineDist() { return penaltySpotFromFieldLineDist_; }
    
    // required int32 penalty_line_from_spot_dist = 14;
    public static final int PENALTY_LINE_FROM_SPOT_DIST_FIELD_NUMBER = 14;
    private boolean hasPenaltyLineFromSpotDist;
    private int penaltyLineFromSpotDist_ = 0;
    public boolean hasPenaltyLineFromSpotDist() { return hasPenaltyLineFromSpotDist; }
    public int getPenaltyLineFromSpotDist() { return penaltyLineFromSpotDist_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasLineWidth) return false;
      if (!hasFieldLength) return false;
      if (!hasFieldWidth) return false;
      if (!hasBoundaryWidth) return false;
      if (!hasRefereeWidth) return false;
      if (!hasGoalWidth) return false;
      if (!hasGoalDepth) return false;
      if (!hasGoalWallWidth) return false;
      if (!hasCenterCircleRadius) return false;
      if (!hasDefenseRadius) return false;
      if (!hasDefenseStretch) return false;
      if (!hasFreeKickFromDefenseDist) return false;
      if (!hasPenaltySpotFromFieldLineDist) return false;
      if (!hasPenaltyLineFromSpotDist) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasLineWidth()) {
        output.writeInt32(1, getLineWidth());
      }
      if (hasFieldLength()) {
        output.writeInt32(2, getFieldLength());
      }
      if (hasFieldWidth()) {
        output.writeInt32(3, getFieldWidth());
      }
      if (hasBoundaryWidth()) {
        output.writeInt32(4, getBoundaryWidth());
      }
      if (hasRefereeWidth()) {
        output.writeInt32(5, getRefereeWidth());
      }
      if (hasGoalWidth()) {
        output.writeInt32(6, getGoalWidth());
      }
      if (hasGoalDepth()) {
        output.writeInt32(7, getGoalDepth());
      }
      if (hasGoalWallWidth()) {
        output.writeInt32(8, getGoalWallWidth());
      }
      if (hasCenterCircleRadius()) {
        output.writeInt32(9, getCenterCircleRadius());
      }
      if (hasDefenseRadius()) {
        output.writeInt32(10, getDefenseRadius());
      }
      if (hasDefenseStretch()) {
        output.writeInt32(11, getDefenseStretch());
      }
      if (hasFreeKickFromDefenseDist()) {
        output.writeInt32(12, getFreeKickFromDefenseDist());
      }
      if (hasPenaltySpotFromFieldLineDist()) {
        output.writeInt32(13, getPenaltySpotFromFieldLineDist());
      }
      if (hasPenaltyLineFromSpotDist()) {
        output.writeInt32(14, getPenaltyLineFromSpotDist());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasLineWidth()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getLineWidth());
      }
      if (hasFieldLength()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getFieldLength());
      }
      if (hasFieldWidth()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getFieldWidth());
      }
      if (hasBoundaryWidth()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getBoundaryWidth());
      }
      if (hasRefereeWidth()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getRefereeWidth());
      }
      if (hasGoalWidth()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, getGoalWidth());
      }
      if (hasGoalDepth()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getGoalDepth());
      }
      if (hasGoalWallWidth()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, getGoalWallWidth());
      }
      if (hasCenterCircleRadius()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, getCenterCircleRadius());
      }
      if (hasDefenseRadius()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, getDefenseRadius());
      }
      if (hasDefenseStretch()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, getDefenseStretch());
      }
      if (hasFreeKickFromDefenseDist()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, getFreeKickFromDefenseDist());
      }
      if (hasPenaltySpotFromFieldLineDist()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, getPenaltySpotFromFieldLineDist());
      }
      if (hasPenaltyLineFromSpotDist()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, getPenaltyLineFromSpotDist());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static network.message.ssl.SSLGeometry.SSL_GeometryFieldSize parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryFieldSize parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryFieldSize parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryFieldSize parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryFieldSize parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryFieldSize parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryFieldSize parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryFieldSize parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryFieldSize parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryFieldSize parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(network.message.ssl.SSLGeometry.SSL_GeometryFieldSize prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private network.message.ssl.SSLGeometry.SSL_GeometryFieldSize result;
      
      // Construct using proto.SSLGeometry.SSL_GeometryFieldSize.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new network.message.ssl.SSLGeometry.SSL_GeometryFieldSize();
        return builder;
      }
      
      protected network.message.ssl.SSLGeometry.SSL_GeometryFieldSize internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new network.message.ssl.SSLGeometry.SSL_GeometryFieldSize();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return network.message.ssl.SSLGeometry.SSL_GeometryFieldSize.getDescriptor();
      }
      
      public network.message.ssl.SSLGeometry.SSL_GeometryFieldSize getDefaultInstanceForType() {
        return network.message.ssl.SSLGeometry.SSL_GeometryFieldSize.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public network.message.ssl.SSLGeometry.SSL_GeometryFieldSize build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private network.message.ssl.SSLGeometry.SSL_GeometryFieldSize buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public network.message.ssl.SSLGeometry.SSL_GeometryFieldSize buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        network.message.ssl.SSLGeometry.SSL_GeometryFieldSize returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof network.message.ssl.SSLGeometry.SSL_GeometryFieldSize) {
          return mergeFrom((network.message.ssl.SSLGeometry.SSL_GeometryFieldSize)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(network.message.ssl.SSLGeometry.SSL_GeometryFieldSize other) {
        if (other == network.message.ssl.SSLGeometry.SSL_GeometryFieldSize.getDefaultInstance()) return this;
        if (other.hasLineWidth()) {
          setLineWidth(other.getLineWidth());
        }
        if (other.hasFieldLength()) {
          setFieldLength(other.getFieldLength());
        }
        if (other.hasFieldWidth()) {
          setFieldWidth(other.getFieldWidth());
        }
        if (other.hasBoundaryWidth()) {
          setBoundaryWidth(other.getBoundaryWidth());
        }
        if (other.hasRefereeWidth()) {
          setRefereeWidth(other.getRefereeWidth());
        }
        if (other.hasGoalWidth()) {
          setGoalWidth(other.getGoalWidth());
        }
        if (other.hasGoalDepth()) {
          setGoalDepth(other.getGoalDepth());
        }
        if (other.hasGoalWallWidth()) {
          setGoalWallWidth(other.getGoalWallWidth());
        }
        if (other.hasCenterCircleRadius()) {
          setCenterCircleRadius(other.getCenterCircleRadius());
        }
        if (other.hasDefenseRadius()) {
          setDefenseRadius(other.getDefenseRadius());
        }
        if (other.hasDefenseStretch()) {
          setDefenseStretch(other.getDefenseStretch());
        }
        if (other.hasFreeKickFromDefenseDist()) {
          setFreeKickFromDefenseDist(other.getFreeKickFromDefenseDist());
        }
        if (other.hasPenaltySpotFromFieldLineDist()) {
          setPenaltySpotFromFieldLineDist(other.getPenaltySpotFromFieldLineDist());
        }
        if (other.hasPenaltyLineFromSpotDist()) {
          setPenaltyLineFromSpotDist(other.getPenaltyLineFromSpotDist());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setLineWidth(input.readInt32());
              break;
            }
            case 16: {
              setFieldLength(input.readInt32());
              break;
            }
            case 24: {
              setFieldWidth(input.readInt32());
              break;
            }
            case 32: {
              setBoundaryWidth(input.readInt32());
              break;
            }
            case 40: {
              setRefereeWidth(input.readInt32());
              break;
            }
            case 48: {
              setGoalWidth(input.readInt32());
              break;
            }
            case 56: {
              setGoalDepth(input.readInt32());
              break;
            }
            case 64: {
              setGoalWallWidth(input.readInt32());
              break;
            }
            case 72: {
              setCenterCircleRadius(input.readInt32());
              break;
            }
            case 80: {
              setDefenseRadius(input.readInt32());
              break;
            }
            case 88: {
              setDefenseStretch(input.readInt32());
              break;
            }
            case 96: {
              setFreeKickFromDefenseDist(input.readInt32());
              break;
            }
            case 104: {
              setPenaltySpotFromFieldLineDist(input.readInt32());
              break;
            }
            case 112: {
              setPenaltyLineFromSpotDist(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required int32 line_width = 1;
      public boolean hasLineWidth() {
        return result.hasLineWidth();
      }
      public int getLineWidth() {
        return result.getLineWidth();
      }
      public Builder setLineWidth(int value) {
        result.hasLineWidth = true;
        result.lineWidth_ = value;
        return this;
      }
      public Builder clearLineWidth() {
        result.hasLineWidth = false;
        result.lineWidth_ = 0;
        return this;
      }
      
      // required int32 field_length = 2;
      public boolean hasFieldLength() {
        return result.hasFieldLength();
      }
      public int getFieldLength() {
        return result.getFieldLength();
      }
      public Builder setFieldLength(int value) {
        result.hasFieldLength = true;
        result.fieldLength_ = value;
        return this;
      }
      public Builder clearFieldLength() {
        result.hasFieldLength = false;
        result.fieldLength_ = 0;
        return this;
      }
      
      // required int32 field_width = 3;
      public boolean hasFieldWidth() {
        return result.hasFieldWidth();
      }
      public int getFieldWidth() {
        return result.getFieldWidth();
      }
      public Builder setFieldWidth(int value) {
        result.hasFieldWidth = true;
        result.fieldWidth_ = value;
        return this;
      }
      public Builder clearFieldWidth() {
        result.hasFieldWidth = false;
        result.fieldWidth_ = 0;
        return this;
      }
      
      // required int32 boundary_width = 4;
      public boolean hasBoundaryWidth() {
        return result.hasBoundaryWidth();
      }
      public int getBoundaryWidth() {
        return result.getBoundaryWidth();
      }
      public Builder setBoundaryWidth(int value) {
        result.hasBoundaryWidth = true;
        result.boundaryWidth_ = value;
        return this;
      }
      public Builder clearBoundaryWidth() {
        result.hasBoundaryWidth = false;
        result.boundaryWidth_ = 0;
        return this;
      }
      
      // required int32 referee_width = 5;
      public boolean hasRefereeWidth() {
        return result.hasRefereeWidth();
      }
      public int getRefereeWidth() {
        return result.getRefereeWidth();
      }
      public Builder setRefereeWidth(int value) {
        result.hasRefereeWidth = true;
        result.refereeWidth_ = value;
        return this;
      }
      public Builder clearRefereeWidth() {
        result.hasRefereeWidth = false;
        result.refereeWidth_ = 0;
        return this;
      }
      
      // required int32 goal_width = 6;
      public boolean hasGoalWidth() {
        return result.hasGoalWidth();
      }
      public int getGoalWidth() {
        return result.getGoalWidth();
      }
      public Builder setGoalWidth(int value) {
        result.hasGoalWidth = true;
        result.goalWidth_ = value;
        return this;
      }
      public Builder clearGoalWidth() {
        result.hasGoalWidth = false;
        result.goalWidth_ = 0;
        return this;
      }
      
      // required int32 goal_depth = 7;
      public boolean hasGoalDepth() {
        return result.hasGoalDepth();
      }
      public int getGoalDepth() {
        return result.getGoalDepth();
      }
      public Builder setGoalDepth(int value) {
        result.hasGoalDepth = true;
        result.goalDepth_ = value;
        return this;
      }
      public Builder clearGoalDepth() {
        result.hasGoalDepth = false;
        result.goalDepth_ = 0;
        return this;
      }
      
      // required int32 goal_wall_width = 8;
      public boolean hasGoalWallWidth() {
        return result.hasGoalWallWidth();
      }
      public int getGoalWallWidth() {
        return result.getGoalWallWidth();
      }
      public Builder setGoalWallWidth(int value) {
        result.hasGoalWallWidth = true;
        result.goalWallWidth_ = value;
        return this;
      }
      public Builder clearGoalWallWidth() {
        result.hasGoalWallWidth = false;
        result.goalWallWidth_ = 0;
        return this;
      }
      
      // required int32 center_circle_radius = 9;
      public boolean hasCenterCircleRadius() {
        return result.hasCenterCircleRadius();
      }
      public int getCenterCircleRadius() {
        return result.getCenterCircleRadius();
      }
      public Builder setCenterCircleRadius(int value) {
        result.hasCenterCircleRadius = true;
        result.centerCircleRadius_ = value;
        return this;
      }
      public Builder clearCenterCircleRadius() {
        result.hasCenterCircleRadius = false;
        result.centerCircleRadius_ = 0;
        return this;
      }
      
      // required int32 defense_radius = 10;
      public boolean hasDefenseRadius() {
        return result.hasDefenseRadius();
      }
      public int getDefenseRadius() {
        return result.getDefenseRadius();
      }
      public Builder setDefenseRadius(int value) {
        result.hasDefenseRadius = true;
        result.defenseRadius_ = value;
        return this;
      }
      public Builder clearDefenseRadius() {
        result.hasDefenseRadius = false;
        result.defenseRadius_ = 0;
        return this;
      }
      
      // required int32 defense_stretch = 11;
      public boolean hasDefenseStretch() {
        return result.hasDefenseStretch();
      }
      public int getDefenseStretch() {
        return result.getDefenseStretch();
      }
      public Builder setDefenseStretch(int value) {
        result.hasDefenseStretch = true;
        result.defenseStretch_ = value;
        return this;
      }
      public Builder clearDefenseStretch() {
        result.hasDefenseStretch = false;
        result.defenseStretch_ = 0;
        return this;
      }
      
      // required int32 free_kick_from_defense_dist = 12;
      public boolean hasFreeKickFromDefenseDist() {
        return result.hasFreeKickFromDefenseDist();
      }
      public int getFreeKickFromDefenseDist() {
        return result.getFreeKickFromDefenseDist();
      }
      public Builder setFreeKickFromDefenseDist(int value) {
        result.hasFreeKickFromDefenseDist = true;
        result.freeKickFromDefenseDist_ = value;
        return this;
      }
      public Builder clearFreeKickFromDefenseDist() {
        result.hasFreeKickFromDefenseDist = false;
        result.freeKickFromDefenseDist_ = 0;
        return this;
      }
      
      // required int32 penalty_spot_from_field_line_dist = 13;
      public boolean hasPenaltySpotFromFieldLineDist() {
        return result.hasPenaltySpotFromFieldLineDist();
      }
      public int getPenaltySpotFromFieldLineDist() {
        return result.getPenaltySpotFromFieldLineDist();
      }
      public Builder setPenaltySpotFromFieldLineDist(int value) {
        result.hasPenaltySpotFromFieldLineDist = true;
        result.penaltySpotFromFieldLineDist_ = value;
        return this;
      }
      public Builder clearPenaltySpotFromFieldLineDist() {
        result.hasPenaltySpotFromFieldLineDist = false;
        result.penaltySpotFromFieldLineDist_ = 0;
        return this;
      }
      
      // required int32 penalty_line_from_spot_dist = 14;
      public boolean hasPenaltyLineFromSpotDist() {
        return result.hasPenaltyLineFromSpotDist();
      }
      public int getPenaltyLineFromSpotDist() {
        return result.getPenaltyLineFromSpotDist();
      }
      public Builder setPenaltyLineFromSpotDist(int value) {
        result.hasPenaltyLineFromSpotDist = true;
        result.penaltyLineFromSpotDist_ = value;
        return this;
      }
      public Builder clearPenaltyLineFromSpotDist() {
        result.hasPenaltyLineFromSpotDist = false;
        result.penaltyLineFromSpotDist_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:proto.SSL_GeometryFieldSize)
    }
    
    static {
      defaultInstance = new SSL_GeometryFieldSize(true);
      network.message.ssl.SSLGeometry.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:proto.SSL_GeometryFieldSize)
  }
  
  public static final class SSL_GeometryCameraCalibration extends
      com.google.protobuf.GeneratedMessage {
    // Use SSL_GeometryCameraCalibration.newBuilder() to construct.
    private SSL_GeometryCameraCalibration() {
      initFields();
    }
    private SSL_GeometryCameraCalibration(boolean noInit) {}
    
    private static final SSL_GeometryCameraCalibration defaultInstance;
    public static SSL_GeometryCameraCalibration getDefaultInstance() {
      return defaultInstance;
    }
    
    public SSL_GeometryCameraCalibration getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return network.message.ssl.SSLGeometry.internal_static_proto_SSL_GeometryCameraCalibration_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return network.message.ssl.SSLGeometry.internal_static_proto_SSL_GeometryCameraCalibration_fieldAccessorTable;
    }
    
    // required uint32 camera_id = 1;
    public static final int CAMERA_ID_FIELD_NUMBER = 1;
    private boolean hasCameraId;
    private int cameraId_ = 0;
    public boolean hasCameraId() { return hasCameraId; }
    public int getCameraId() { return cameraId_; }
    
    // required float focal_length = 2;
    public static final int FOCAL_LENGTH_FIELD_NUMBER = 2;
    private boolean hasFocalLength;
    private float focalLength_ = 0F;
    public boolean hasFocalLength() { return hasFocalLength; }
    public float getFocalLength() { return focalLength_; }
    
    // required float principal_point_x = 3;
    public static final int PRINCIPAL_POINT_X_FIELD_NUMBER = 3;
    private boolean hasPrincipalPointX;
    private float principalPointX_ = 0F;
    public boolean hasPrincipalPointX() { return hasPrincipalPointX; }
    public float getPrincipalPointX() { return principalPointX_; }
    
    // required float principal_point_y = 4;
    public static final int PRINCIPAL_POINT_Y_FIELD_NUMBER = 4;
    private boolean hasPrincipalPointY;
    private float principalPointY_ = 0F;
    public boolean hasPrincipalPointY() { return hasPrincipalPointY; }
    public float getPrincipalPointY() { return principalPointY_; }
    
    // required float distortion = 5;
    public static final int DISTORTION_FIELD_NUMBER = 5;
    private boolean hasDistortion;
    private float distortion_ = 0F;
    public boolean hasDistortion() { return hasDistortion; }
    public float getDistortion() { return distortion_; }
    
    // required float q0 = 6;
    public static final int Q0_FIELD_NUMBER = 6;
    private boolean hasQ0;
    private float q0_ = 0F;
    public boolean hasQ0() { return hasQ0; }
    public float getQ0() { return q0_; }
    
    // required float q1 = 7;
    public static final int Q1_FIELD_NUMBER = 7;
    private boolean hasQ1;
    private float q1_ = 0F;
    public boolean hasQ1() { return hasQ1; }
    public float getQ1() { return q1_; }
    
    // required float q2 = 8;
    public static final int Q2_FIELD_NUMBER = 8;
    private boolean hasQ2;
    private float q2_ = 0F;
    public boolean hasQ2() { return hasQ2; }
    public float getQ2() { return q2_; }
    
    // required float q3 = 9;
    public static final int Q3_FIELD_NUMBER = 9;
    private boolean hasQ3;
    private float q3_ = 0F;
    public boolean hasQ3() { return hasQ3; }
    public float getQ3() { return q3_; }
    
    // required float tx = 10;
    public static final int TX_FIELD_NUMBER = 10;
    private boolean hasTx;
    private float tx_ = 0F;
    public boolean hasTx() { return hasTx; }
    public float getTx() { return tx_; }
    
    // required float ty = 11;
    public static final int TY_FIELD_NUMBER = 11;
    private boolean hasTy;
    private float ty_ = 0F;
    public boolean hasTy() { return hasTy; }
    public float getTy() { return ty_; }
    
    // required float tz = 12;
    public static final int TZ_FIELD_NUMBER = 12;
    private boolean hasTz;
    private float tz_ = 0F;
    public boolean hasTz() { return hasTz; }
    public float getTz() { return tz_; }
    
    // optional float derived_camera_world_tx = 13;
    public static final int DERIVED_CAMERA_WORLD_TX_FIELD_NUMBER = 13;
    private boolean hasDerivedCameraWorldTx;
    private float derivedCameraWorldTx_ = 0F;
    public boolean hasDerivedCameraWorldTx() { return hasDerivedCameraWorldTx; }
    public float getDerivedCameraWorldTx() { return derivedCameraWorldTx_; }
    
    // optional float derived_camera_world_ty = 14;
    public static final int DERIVED_CAMERA_WORLD_TY_FIELD_NUMBER = 14;
    private boolean hasDerivedCameraWorldTy;
    private float derivedCameraWorldTy_ = 0F;
    public boolean hasDerivedCameraWorldTy() { return hasDerivedCameraWorldTy; }
    public float getDerivedCameraWorldTy() { return derivedCameraWorldTy_; }
    
    // optional float derived_camera_world_tz = 15;
    public static final int DERIVED_CAMERA_WORLD_TZ_FIELD_NUMBER = 15;
    private boolean hasDerivedCameraWorldTz;
    private float derivedCameraWorldTz_ = 0F;
    public boolean hasDerivedCameraWorldTz() { return hasDerivedCameraWorldTz; }
    public float getDerivedCameraWorldTz() { return derivedCameraWorldTz_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasCameraId) return false;
      if (!hasFocalLength) return false;
      if (!hasPrincipalPointX) return false;
      if (!hasPrincipalPointY) return false;
      if (!hasDistortion) return false;
      if (!hasQ0) return false;
      if (!hasQ1) return false;
      if (!hasQ2) return false;
      if (!hasQ3) return false;
      if (!hasTx) return false;
      if (!hasTy) return false;
      if (!hasTz) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCameraId()) {
        output.writeUInt32(1, getCameraId());
      }
      if (hasFocalLength()) {
        output.writeFloat(2, getFocalLength());
      }
      if (hasPrincipalPointX()) {
        output.writeFloat(3, getPrincipalPointX());
      }
      if (hasPrincipalPointY()) {
        output.writeFloat(4, getPrincipalPointY());
      }
      if (hasDistortion()) {
        output.writeFloat(5, getDistortion());
      }
      if (hasQ0()) {
        output.writeFloat(6, getQ0());
      }
      if (hasQ1()) {
        output.writeFloat(7, getQ1());
      }
      if (hasQ2()) {
        output.writeFloat(8, getQ2());
      }
      if (hasQ3()) {
        output.writeFloat(9, getQ3());
      }
      if (hasTx()) {
        output.writeFloat(10, getTx());
      }
      if (hasTy()) {
        output.writeFloat(11, getTy());
      }
      if (hasTz()) {
        output.writeFloat(12, getTz());
      }
      if (hasDerivedCameraWorldTx()) {
        output.writeFloat(13, getDerivedCameraWorldTx());
      }
      if (hasDerivedCameraWorldTy()) {
        output.writeFloat(14, getDerivedCameraWorldTy());
      }
      if (hasDerivedCameraWorldTz()) {
        output.writeFloat(15, getDerivedCameraWorldTz());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCameraId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getCameraId());
      }
      if (hasFocalLength()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, getFocalLength());
      }
      if (hasPrincipalPointX()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, getPrincipalPointX());
      }
      if (hasPrincipalPointY()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, getPrincipalPointY());
      }
      if (hasDistortion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, getDistortion());
      }
      if (hasQ0()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, getQ0());
      }
      if (hasQ1()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, getQ1());
      }
      if (hasQ2()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, getQ2());
      }
      if (hasQ3()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, getQ3());
      }
      if (hasTx()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, getTx());
      }
      if (hasTy()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, getTy());
      }
      if (hasTz()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, getTz());
      }
      if (hasDerivedCameraWorldTx()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, getDerivedCameraWorldTx());
      }
      if (hasDerivedCameraWorldTy()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, getDerivedCameraWorldTy());
      }
      if (hasDerivedCameraWorldTz()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, getDerivedCameraWorldTz());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration result;
      
      // Construct using proto.SSLGeometry.SSL_GeometryCameraCalibration.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration();
        return builder;
      }
      
      protected network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration.getDescriptor();
      }
      
      public network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration getDefaultInstanceForType() {
        return network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration) {
          return mergeFrom((network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration other) {
        if (other == network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration.getDefaultInstance()) return this;
        if (other.hasCameraId()) {
          setCameraId(other.getCameraId());
        }
        if (other.hasFocalLength()) {
          setFocalLength(other.getFocalLength());
        }
        if (other.hasPrincipalPointX()) {
          setPrincipalPointX(other.getPrincipalPointX());
        }
        if (other.hasPrincipalPointY()) {
          setPrincipalPointY(other.getPrincipalPointY());
        }
        if (other.hasDistortion()) {
          setDistortion(other.getDistortion());
        }
        if (other.hasQ0()) {
          setQ0(other.getQ0());
        }
        if (other.hasQ1()) {
          setQ1(other.getQ1());
        }
        if (other.hasQ2()) {
          setQ2(other.getQ2());
        }
        if (other.hasQ3()) {
          setQ3(other.getQ3());
        }
        if (other.hasTx()) {
          setTx(other.getTx());
        }
        if (other.hasTy()) {
          setTy(other.getTy());
        }
        if (other.hasTz()) {
          setTz(other.getTz());
        }
        if (other.hasDerivedCameraWorldTx()) {
          setDerivedCameraWorldTx(other.getDerivedCameraWorldTx());
        }
        if (other.hasDerivedCameraWorldTy()) {
          setDerivedCameraWorldTy(other.getDerivedCameraWorldTy());
        }
        if (other.hasDerivedCameraWorldTz()) {
          setDerivedCameraWorldTz(other.getDerivedCameraWorldTz());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setCameraId(input.readUInt32());
              break;
            }
            case 21: {
              setFocalLength(input.readFloat());
              break;
            }
            case 29: {
              setPrincipalPointX(input.readFloat());
              break;
            }
            case 37: {
              setPrincipalPointY(input.readFloat());
              break;
            }
            case 45: {
              setDistortion(input.readFloat());
              break;
            }
            case 53: {
              setQ0(input.readFloat());
              break;
            }
            case 61: {
              setQ1(input.readFloat());
              break;
            }
            case 69: {
              setQ2(input.readFloat());
              break;
            }
            case 77: {
              setQ3(input.readFloat());
              break;
            }
            case 85: {
              setTx(input.readFloat());
              break;
            }
            case 93: {
              setTy(input.readFloat());
              break;
            }
            case 101: {
              setTz(input.readFloat());
              break;
            }
            case 109: {
              setDerivedCameraWorldTx(input.readFloat());
              break;
            }
            case 117: {
              setDerivedCameraWorldTy(input.readFloat());
              break;
            }
            case 125: {
              setDerivedCameraWorldTz(input.readFloat());
              break;
            }
          }
        }
      }
      
      
      // required uint32 camera_id = 1;
      public boolean hasCameraId() {
        return result.hasCameraId();
      }
      public int getCameraId() {
        return result.getCameraId();
      }
      public Builder setCameraId(int value) {
        result.hasCameraId = true;
        result.cameraId_ = value;
        return this;
      }
      public Builder clearCameraId() {
        result.hasCameraId = false;
        result.cameraId_ = 0;
        return this;
      }
      
      // required float focal_length = 2;
      public boolean hasFocalLength() {
        return result.hasFocalLength();
      }
      public float getFocalLength() {
        return result.getFocalLength();
      }
      public Builder setFocalLength(float value) {
        result.hasFocalLength = true;
        result.focalLength_ = value;
        return this;
      }
      public Builder clearFocalLength() {
        result.hasFocalLength = false;
        result.focalLength_ = 0F;
        return this;
      }
      
      // required float principal_point_x = 3;
      public boolean hasPrincipalPointX() {
        return result.hasPrincipalPointX();
      }
      public float getPrincipalPointX() {
        return result.getPrincipalPointX();
      }
      public Builder setPrincipalPointX(float value) {
        result.hasPrincipalPointX = true;
        result.principalPointX_ = value;
        return this;
      }
      public Builder clearPrincipalPointX() {
        result.hasPrincipalPointX = false;
        result.principalPointX_ = 0F;
        return this;
      }
      
      // required float principal_point_y = 4;
      public boolean hasPrincipalPointY() {
        return result.hasPrincipalPointY();
      }
      public float getPrincipalPointY() {
        return result.getPrincipalPointY();
      }
      public Builder setPrincipalPointY(float value) {
        result.hasPrincipalPointY = true;
        result.principalPointY_ = value;
        return this;
      }
      public Builder clearPrincipalPointY() {
        result.hasPrincipalPointY = false;
        result.principalPointY_ = 0F;
        return this;
      }
      
      // required float distortion = 5;
      public boolean hasDistortion() {
        return result.hasDistortion();
      }
      public float getDistortion() {
        return result.getDistortion();
      }
      public Builder setDistortion(float value) {
        result.hasDistortion = true;
        result.distortion_ = value;
        return this;
      }
      public Builder clearDistortion() {
        result.hasDistortion = false;
        result.distortion_ = 0F;
        return this;
      }
      
      // required float q0 = 6;
      public boolean hasQ0() {
        return result.hasQ0();
      }
      public float getQ0() {
        return result.getQ0();
      }
      public Builder setQ0(float value) {
        result.hasQ0 = true;
        result.q0_ = value;
        return this;
      }
      public Builder clearQ0() {
        result.hasQ0 = false;
        result.q0_ = 0F;
        return this;
      }
      
      // required float q1 = 7;
      public boolean hasQ1() {
        return result.hasQ1();
      }
      public float getQ1() {
        return result.getQ1();
      }
      public Builder setQ1(float value) {
        result.hasQ1 = true;
        result.q1_ = value;
        return this;
      }
      public Builder clearQ1() {
        result.hasQ1 = false;
        result.q1_ = 0F;
        return this;
      }
      
      // required float q2 = 8;
      public boolean hasQ2() {
        return result.hasQ2();
      }
      public float getQ2() {
        return result.getQ2();
      }
      public Builder setQ2(float value) {
        result.hasQ2 = true;
        result.q2_ = value;
        return this;
      }
      public Builder clearQ2() {
        result.hasQ2 = false;
        result.q2_ = 0F;
        return this;
      }
      
      // required float q3 = 9;
      public boolean hasQ3() {
        return result.hasQ3();
      }
      public float getQ3() {
        return result.getQ3();
      }
      public Builder setQ3(float value) {
        result.hasQ3 = true;
        result.q3_ = value;
        return this;
      }
      public Builder clearQ3() {
        result.hasQ3 = false;
        result.q3_ = 0F;
        return this;
      }
      
      // required float tx = 10;
      public boolean hasTx() {
        return result.hasTx();
      }
      public float getTx() {
        return result.getTx();
      }
      public Builder setTx(float value) {
        result.hasTx = true;
        result.tx_ = value;
        return this;
      }
      public Builder clearTx() {
        result.hasTx = false;
        result.tx_ = 0F;
        return this;
      }
      
      // required float ty = 11;
      public boolean hasTy() {
        return result.hasTy();
      }
      public float getTy() {
        return result.getTy();
      }
      public Builder setTy(float value) {
        result.hasTy = true;
        result.ty_ = value;
        return this;
      }
      public Builder clearTy() {
        result.hasTy = false;
        result.ty_ = 0F;
        return this;
      }
      
      // required float tz = 12;
      public boolean hasTz() {
        return result.hasTz();
      }
      public float getTz() {
        return result.getTz();
      }
      public Builder setTz(float value) {
        result.hasTz = true;
        result.tz_ = value;
        return this;
      }
      public Builder clearTz() {
        result.hasTz = false;
        result.tz_ = 0F;
        return this;
      }
      
      // optional float derived_camera_world_tx = 13;
      public boolean hasDerivedCameraWorldTx() {
        return result.hasDerivedCameraWorldTx();
      }
      public float getDerivedCameraWorldTx() {
        return result.getDerivedCameraWorldTx();
      }
      public Builder setDerivedCameraWorldTx(float value) {
        result.hasDerivedCameraWorldTx = true;
        result.derivedCameraWorldTx_ = value;
        return this;
      }
      public Builder clearDerivedCameraWorldTx() {
        result.hasDerivedCameraWorldTx = false;
        result.derivedCameraWorldTx_ = 0F;
        return this;
      }
      
      // optional float derived_camera_world_ty = 14;
      public boolean hasDerivedCameraWorldTy() {
        return result.hasDerivedCameraWorldTy();
      }
      public float getDerivedCameraWorldTy() {
        return result.getDerivedCameraWorldTy();
      }
      public Builder setDerivedCameraWorldTy(float value) {
        result.hasDerivedCameraWorldTy = true;
        result.derivedCameraWorldTy_ = value;
        return this;
      }
      public Builder clearDerivedCameraWorldTy() {
        result.hasDerivedCameraWorldTy = false;
        result.derivedCameraWorldTy_ = 0F;
        return this;
      }
      
      // optional float derived_camera_world_tz = 15;
      public boolean hasDerivedCameraWorldTz() {
        return result.hasDerivedCameraWorldTz();
      }
      public float getDerivedCameraWorldTz() {
        return result.getDerivedCameraWorldTz();
      }
      public Builder setDerivedCameraWorldTz(float value) {
        result.hasDerivedCameraWorldTz = true;
        result.derivedCameraWorldTz_ = value;
        return this;
      }
      public Builder clearDerivedCameraWorldTz() {
        result.hasDerivedCameraWorldTz = false;
        result.derivedCameraWorldTz_ = 0F;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:proto.SSL_GeometryCameraCalibration)
    }
    
    static {
      defaultInstance = new SSL_GeometryCameraCalibration(true);
      network.message.ssl.SSLGeometry.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:proto.SSL_GeometryCameraCalibration)
  }
  
  public static final class SSL_GeometryData extends
      com.google.protobuf.GeneratedMessage {
    // Use SSL_GeometryData.newBuilder() to construct.
    private SSL_GeometryData() {
      initFields();
    }
    private SSL_GeometryData(boolean noInit) {}
    
    private static final SSL_GeometryData defaultInstance;
    public static SSL_GeometryData getDefaultInstance() {
      return defaultInstance;
    }
    
    public SSL_GeometryData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return network.message.ssl.SSLGeometry.internal_static_proto_SSL_GeometryData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return network.message.ssl.SSLGeometry.internal_static_proto_SSL_GeometryData_fieldAccessorTable;
    }
    
    // required .proto.SSL_GeometryFieldSize field = 1;
    public static final int FIELD_FIELD_NUMBER = 1;
    private boolean hasField;
    private network.message.ssl.SSLGeometry.SSL_GeometryFieldSize field_;
    public boolean hasField() { return hasField; }
    public network.message.ssl.SSLGeometry.SSL_GeometryFieldSize getField() { return field_; }
    
    // repeated .proto.SSL_GeometryCameraCalibration calib = 2;
    public static final int CALIB_FIELD_NUMBER = 2;
    private java.util.List<network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration> calib_ =
      java.util.Collections.emptyList();
    public java.util.List<network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration> getCalibList() {
      return calib_;
    }
    public int getCalibCount() { return calib_.size(); }
    public network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration getCalib(int index) {
      return calib_.get(index);
    }
    
    private void initFields() {
      field_ = network.message.ssl.SSLGeometry.SSL_GeometryFieldSize.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasField) return false;
      if (!getField().isInitialized()) return false;
      for (network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration element : getCalibList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasField()) {
        output.writeMessage(1, getField());
      }
      for (network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration element : getCalibList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasField()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getField());
      }
      for (network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration element : getCalibList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static network.message.ssl.SSLGeometry.SSL_GeometryData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static network.message.ssl.SSLGeometry.SSL_GeometryData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(network.message.ssl.SSLGeometry.SSL_GeometryData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private network.message.ssl.SSLGeometry.SSL_GeometryData result;
      
      // Construct using proto.SSLGeometry.SSL_GeometryData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new network.message.ssl.SSLGeometry.SSL_GeometryData();
        return builder;
      }
      
      protected network.message.ssl.SSLGeometry.SSL_GeometryData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new network.message.ssl.SSLGeometry.SSL_GeometryData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return network.message.ssl.SSLGeometry.SSL_GeometryData.getDescriptor();
      }
      
      public network.message.ssl.SSLGeometry.SSL_GeometryData getDefaultInstanceForType() {
        return network.message.ssl.SSLGeometry.SSL_GeometryData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public network.message.ssl.SSLGeometry.SSL_GeometryData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private network.message.ssl.SSLGeometry.SSL_GeometryData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public network.message.ssl.SSLGeometry.SSL_GeometryData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.calib_ != java.util.Collections.EMPTY_LIST) {
          result.calib_ =
            java.util.Collections.unmodifiableList(result.calib_);
        }
        network.message.ssl.SSLGeometry.SSL_GeometryData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof network.message.ssl.SSLGeometry.SSL_GeometryData) {
          return mergeFrom((network.message.ssl.SSLGeometry.SSL_GeometryData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(network.message.ssl.SSLGeometry.SSL_GeometryData other) {
        if (other == network.message.ssl.SSLGeometry.SSL_GeometryData.getDefaultInstance()) return this;
        if (other.hasField()) {
          mergeField(other.getField());
        }
        if (!other.calib_.isEmpty()) {
          if (result.calib_.isEmpty()) {
            result.calib_ = new java.util.ArrayList<network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration>();
          }
          result.calib_.addAll(other.calib_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              network.message.ssl.SSLGeometry.SSL_GeometryFieldSize.Builder subBuilder = network.message.ssl.SSLGeometry.SSL_GeometryFieldSize.newBuilder();
              if (hasField()) {
                subBuilder.mergeFrom(getField());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setField(subBuilder.buildPartial());
              break;
            }
            case 18: {
              network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration.Builder subBuilder = network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCalib(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .proto.SSL_GeometryFieldSize field = 1;
      public boolean hasField() {
        return result.hasField();
      }
      public network.message.ssl.SSLGeometry.SSL_GeometryFieldSize getField() {
        return result.getField();
      }
      public Builder setField(network.message.ssl.SSLGeometry.SSL_GeometryFieldSize value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasField = true;
        result.field_ = value;
        return this;
      }
      public Builder setField(network.message.ssl.SSLGeometry.SSL_GeometryFieldSize.Builder builderForValue) {
        result.hasField = true;
        result.field_ = builderForValue.build();
        return this;
      }
      public Builder mergeField(network.message.ssl.SSLGeometry.SSL_GeometryFieldSize value) {
        if (result.hasField() &&
            result.field_ != network.message.ssl.SSLGeometry.SSL_GeometryFieldSize.getDefaultInstance()) {
          result.field_ =
            network.message.ssl.SSLGeometry.SSL_GeometryFieldSize.newBuilder(result.field_).mergeFrom(value).buildPartial();
        } else {
          result.field_ = value;
        }
        result.hasField = true;
        return this;
      }
      public Builder clearField() {
        result.hasField = false;
        result.field_ = network.message.ssl.SSLGeometry.SSL_GeometryFieldSize.getDefaultInstance();
        return this;
      }
      
      // repeated .proto.SSL_GeometryCameraCalibration calib = 2;
      public java.util.List<network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration> getCalibList() {
        return java.util.Collections.unmodifiableList(result.calib_);
      }
      public int getCalibCount() {
        return result.getCalibCount();
      }
      public network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration getCalib(int index) {
        return result.getCalib(index);
      }
      public Builder setCalib(int index, network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.calib_.set(index, value);
        return this;
      }
      public Builder setCalib(int index, network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration.Builder builderForValue) {
        result.calib_.set(index, builderForValue.build());
        return this;
      }
      public Builder addCalib(network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.calib_.isEmpty()) {
          result.calib_ = new java.util.ArrayList<network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration>();
        }
        result.calib_.add(value);
        return this;
      }
      public Builder addCalib(network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration.Builder builderForValue) {
        if (result.calib_.isEmpty()) {
          result.calib_ = new java.util.ArrayList<network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration>();
        }
        result.calib_.add(builderForValue.build());
        return this;
      }
      public Builder addAllCalib(
          java.lang.Iterable<? extends network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration> values) {
        if (result.calib_.isEmpty()) {
          result.calib_ = new java.util.ArrayList<network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration>();
        }
        super.addAll(values, result.calib_);
        return this;
      }
      public Builder clearCalib() {
        result.calib_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:proto.SSL_GeometryData)
    }
    
    static {
      defaultInstance = new SSL_GeometryData(true);
      network.message.ssl.SSLGeometry.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:proto.SSL_GeometryData)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_SSL_GeometryFieldSize_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_SSL_GeometryFieldSize_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_SSL_GeometryCameraCalibration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_SSL_GeometryCameraCalibration_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_SSL_GeometryData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_SSL_GeometryData_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n#messages_robocup_ssl_geometry.proto\022\005p" +
      "roto\"\212\003\n\025SSL_GeometryFieldSize\022\022\n\nline_w" +
      "idth\030\001 \002(\005\022\024\n\014field_length\030\002 \002(\005\022\023\n\013fiel" +
      "d_width\030\003 \002(\005\022\026\n\016boundary_width\030\004 \002(\005\022\025\n" +
      "\rreferee_width\030\005 \002(\005\022\022\n\ngoal_width\030\006 \002(\005" +
      "\022\022\n\ngoal_depth\030\007 \002(\005\022\027\n\017goal_wall_width\030" +
      "\010 \002(\005\022\034\n\024center_circle_radius\030\t \002(\005\022\026\n\016d" +
      "efense_radius\030\n \002(\005\022\027\n\017defense_stretch\030\013" +
      " \002(\005\022#\n\033free_kick_from_defense_dist\030\014 \002(" +
      "\005\022)\n!penalty_spot_from_field_line_dist\030\r",
      " \002(\005\022#\n\033penalty_line_from_spot_dist\030\016 \002(" +
      "\005\"\311\002\n\035SSL_GeometryCameraCalibration\022\021\n\tc" +
      "amera_id\030\001 \002(\r\022\024\n\014focal_length\030\002 \002(\002\022\031\n\021" +
      "principal_point_x\030\003 \002(\002\022\031\n\021principal_poi" +
      "nt_y\030\004 \002(\002\022\022\n\ndistortion\030\005 \002(\002\022\n\n\002q0\030\006 \002" +
      "(\002\022\n\n\002q1\030\007 \002(\002\022\n\n\002q2\030\010 \002(\002\022\n\n\002q3\030\t \002(\002\022\n" +
      "\n\002tx\030\n \002(\002\022\n\n\002ty\030\013 \002(\002\022\n\n\002tz\030\014 \002(\002\022\037\n\027de" +
      "rived_camera_world_tx\030\r \001(\002\022\037\n\027derived_c" +
      "amera_world_ty\030\016 \001(\002\022\037\n\027derived_camera_w" +
      "orld_tz\030\017 \001(\002\"t\n\020SSL_GeometryData\022+\n\005fie",
      "ld\030\001 \002(\0132\034.proto.SSL_GeometryFieldSize\0223" +
      "\n\005calib\030\002 \003(\0132$.proto.SSL_GeometryCamera" +
      "CalibrationB\rB\013SSLGeometry"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_proto_SSL_GeometryFieldSize_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_proto_SSL_GeometryFieldSize_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_proto_SSL_GeometryFieldSize_descriptor,
              new java.lang.String[] { "LineWidth", "FieldLength", "FieldWidth", "BoundaryWidth", "RefereeWidth", "GoalWidth", "GoalDepth", "GoalWallWidth", "CenterCircleRadius", "DefenseRadius", "DefenseStretch", "FreeKickFromDefenseDist", "PenaltySpotFromFieldLineDist", "PenaltyLineFromSpotDist", },
              network.message.ssl.SSLGeometry.SSL_GeometryFieldSize.class,
              network.message.ssl.SSLGeometry.SSL_GeometryFieldSize.Builder.class);
          internal_static_proto_SSL_GeometryCameraCalibration_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_proto_SSL_GeometryCameraCalibration_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_proto_SSL_GeometryCameraCalibration_descriptor,
              new java.lang.String[] { "CameraId", "FocalLength", "PrincipalPointX", "PrincipalPointY", "Distortion", "Q0", "Q1", "Q2", "Q3", "Tx", "Ty", "Tz", "DerivedCameraWorldTx", "DerivedCameraWorldTy", "DerivedCameraWorldTz", },
              network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration.class,
              network.message.ssl.SSLGeometry.SSL_GeometryCameraCalibration.Builder.class);
          internal_static_proto_SSL_GeometryData_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_proto_SSL_GeometryData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_proto_SSL_GeometryData_descriptor,
              new java.lang.String[] { "Field", "Calib", },
              network.message.ssl.SSLGeometry.SSL_GeometryData.class,
              network.message.ssl.SSLGeometry.SSL_GeometryData.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
