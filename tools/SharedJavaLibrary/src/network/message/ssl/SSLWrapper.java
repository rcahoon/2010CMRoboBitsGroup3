// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages_robocup_ssl_wrapper.proto

package network.message.ssl;

public final class SSLWrapper {
  private SSLWrapper() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class SSL_WrapperPacket extends
      com.google.protobuf.GeneratedMessage {
    // Use SSL_WrapperPacket.newBuilder() to construct.
    private SSL_WrapperPacket() {
      initFields();
    }
    private SSL_WrapperPacket(boolean noInit) {}
    
    private static final SSL_WrapperPacket defaultInstance;
    public static SSL_WrapperPacket getDefaultInstance() {
      return defaultInstance;
    }
    
    public SSL_WrapperPacket getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return network.message.ssl.SSLWrapper.internal_static_proto_SSL_WrapperPacket_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return network.message.ssl.SSLWrapper.internal_static_proto_SSL_WrapperPacket_fieldAccessorTable;
    }
    
    // optional .proto.SSL_DetectionFrame detection = 1;
    public static final int DETECTION_FIELD_NUMBER = 1;
    private boolean hasDetection;
    private network.message.ssl.SSLDetection.SSL_DetectionFrame detection_;
    public boolean hasDetection() { return hasDetection; }
    public network.message.ssl.SSLDetection.SSL_DetectionFrame getDetection() { return detection_; }
    
    // optional .proto.SSL_GeometryData geometry = 2;
    public static final int GEOMETRY_FIELD_NUMBER = 2;
    private boolean hasGeometry;
    private network.message.ssl.SSLGeometry.SSL_GeometryData geometry_;
    public boolean hasGeometry() { return hasGeometry; }
    public network.message.ssl.SSLGeometry.SSL_GeometryData getGeometry() { return geometry_; }
    
    private void initFields() {
      detection_ = network.message.ssl.SSLDetection.SSL_DetectionFrame.getDefaultInstance();
      geometry_ = network.message.ssl.SSLGeometry.SSL_GeometryData.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasDetection()) {
        if (!getDetection().isInitialized()) return false;
      }
      if (hasGeometry()) {
        if (!getGeometry().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasDetection()) {
        output.writeMessage(1, getDetection());
      }
      if (hasGeometry()) {
        output.writeMessage(2, getGeometry());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasDetection()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getDetection());
      }
      if (hasGeometry()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getGeometry());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static network.message.ssl.SSLWrapper.SSL_WrapperPacket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static network.message.ssl.SSLWrapper.SSL_WrapperPacket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static network.message.ssl.SSLWrapper.SSL_WrapperPacket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static network.message.ssl.SSLWrapper.SSL_WrapperPacket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static network.message.ssl.SSLWrapper.SSL_WrapperPacket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static network.message.ssl.SSLWrapper.SSL_WrapperPacket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static network.message.ssl.SSLWrapper.SSL_WrapperPacket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static network.message.ssl.SSLWrapper.SSL_WrapperPacket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static network.message.ssl.SSLWrapper.SSL_WrapperPacket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static network.message.ssl.SSLWrapper.SSL_WrapperPacket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(network.message.ssl.SSLWrapper.SSL_WrapperPacket prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private network.message.ssl.SSLWrapper.SSL_WrapperPacket result;
      
      // Construct using proto.SSLWrapper.SSL_WrapperPacket.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new network.message.ssl.SSLWrapper.SSL_WrapperPacket();
        return builder;
      }
      
      protected network.message.ssl.SSLWrapper.SSL_WrapperPacket internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new network.message.ssl.SSLWrapper.SSL_WrapperPacket();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return network.message.ssl.SSLWrapper.SSL_WrapperPacket.getDescriptor();
      }
      
      public network.message.ssl.SSLWrapper.SSL_WrapperPacket getDefaultInstanceForType() {
        return network.message.ssl.SSLWrapper.SSL_WrapperPacket.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public network.message.ssl.SSLWrapper.SSL_WrapperPacket build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private network.message.ssl.SSLWrapper.SSL_WrapperPacket buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public network.message.ssl.SSLWrapper.SSL_WrapperPacket buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        network.message.ssl.SSLWrapper.SSL_WrapperPacket returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof network.message.ssl.SSLWrapper.SSL_WrapperPacket) {
          return mergeFrom((network.message.ssl.SSLWrapper.SSL_WrapperPacket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(network.message.ssl.SSLWrapper.SSL_WrapperPacket other) {
        if (other == network.message.ssl.SSLWrapper.SSL_WrapperPacket.getDefaultInstance()) return this;
        if (other.hasDetection()) {
          mergeDetection(other.getDetection());
        }
        if (other.hasGeometry()) {
          mergeGeometry(other.getGeometry());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              network.message.ssl.SSLDetection.SSL_DetectionFrame.Builder subBuilder = network.message.ssl.SSLDetection.SSL_DetectionFrame.newBuilder();
              if (hasDetection()) {
                subBuilder.mergeFrom(getDetection());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDetection(subBuilder.buildPartial());
              break;
            }
            case 18: {
              network.message.ssl.SSLGeometry.SSL_GeometryData.Builder subBuilder = network.message.ssl.SSLGeometry.SSL_GeometryData.newBuilder();
              if (hasGeometry()) {
                subBuilder.mergeFrom(getGeometry());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGeometry(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .proto.SSL_DetectionFrame detection = 1;
      public boolean hasDetection() {
        return result.hasDetection();
      }
      public network.message.ssl.SSLDetection.SSL_DetectionFrame getDetection() {
        return result.getDetection();
      }
      public Builder setDetection(network.message.ssl.SSLDetection.SSL_DetectionFrame value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDetection = true;
        result.detection_ = value;
        return this;
      }
      public Builder setDetection(network.message.ssl.SSLDetection.SSL_DetectionFrame.Builder builderForValue) {
        result.hasDetection = true;
        result.detection_ = builderForValue.build();
        return this;
      }
      public Builder mergeDetection(network.message.ssl.SSLDetection.SSL_DetectionFrame value) {
        if (result.hasDetection() &&
            result.detection_ != network.message.ssl.SSLDetection.SSL_DetectionFrame.getDefaultInstance()) {
          result.detection_ =
            network.message.ssl.SSLDetection.SSL_DetectionFrame.newBuilder(result.detection_).mergeFrom(value).buildPartial();
        } else {
          result.detection_ = value;
        }
        result.hasDetection = true;
        return this;
      }
      public Builder clearDetection() {
        result.hasDetection = false;
        result.detection_ = network.message.ssl.SSLDetection.SSL_DetectionFrame.getDefaultInstance();
        return this;
      }
      
      // optional .proto.SSL_GeometryData geometry = 2;
      public boolean hasGeometry() {
        return result.hasGeometry();
      }
      public network.message.ssl.SSLGeometry.SSL_GeometryData getGeometry() {
        return result.getGeometry();
      }
      public Builder setGeometry(network.message.ssl.SSLGeometry.SSL_GeometryData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGeometry = true;
        result.geometry_ = value;
        return this;
      }
      public Builder setGeometry(network.message.ssl.SSLGeometry.SSL_GeometryData.Builder builderForValue) {
        result.hasGeometry = true;
        result.geometry_ = builderForValue.build();
        return this;
      }
      public Builder mergeGeometry(network.message.ssl.SSLGeometry.SSL_GeometryData value) {
        if (result.hasGeometry() &&
            result.geometry_ != network.message.ssl.SSLGeometry.SSL_GeometryData.getDefaultInstance()) {
          result.geometry_ =
            network.message.ssl.SSLGeometry.SSL_GeometryData.newBuilder(result.geometry_).mergeFrom(value).buildPartial();
        } else {
          result.geometry_ = value;
        }
        result.hasGeometry = true;
        return this;
      }
      public Builder clearGeometry() {
        result.hasGeometry = false;
        result.geometry_ = network.message.ssl.SSLGeometry.SSL_GeometryData.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:proto.SSL_WrapperPacket)
    }
    
    static {
      defaultInstance = new SSL_WrapperPacket(true);
      network.message.ssl.SSLWrapper.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:proto.SSL_WrapperPacket)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_SSL_WrapperPacket_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_SSL_WrapperPacket_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"messages_robocup_ssl_wrapper.proto\022\005pr" +
      "oto\032$messages_robocup_ssl_detection.prot" +
      "o\032#messages_robocup_ssl_geometry.proto\"l" +
      "\n\021SSL_WrapperPacket\022,\n\tdetection\030\001 \001(\0132\031" +
      ".proto.SSL_DetectionFrame\022)\n\010geometry\030\002 " +
      "\001(\0132\027.proto.SSL_GeometryDataB\014B\nSSLWrapp" +
      "er"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_proto_SSL_WrapperPacket_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_proto_SSL_WrapperPacket_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_proto_SSL_WrapperPacket_descriptor,
              new java.lang.String[] { "Detection", "Geometry", },
              network.message.ssl.SSLWrapper.SSL_WrapperPacket.class,
              network.message.ssl.SSLWrapper.SSL_WrapperPacket.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          network.message.ssl.SSLDetection.getDescriptor(),
          network.message.ssl.SSLGeometry.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
