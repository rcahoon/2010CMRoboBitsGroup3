// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages_robocup_ssl_detection.proto

package network.message.ssl;

public final class SSLDetection {
  private SSLDetection() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class SSL_DetectionBall extends
      com.google.protobuf.GeneratedMessage {
    // Use SSL_DetectionBall.newBuilder() to construct.
    private SSL_DetectionBall() {
      initFields();
    }
    private SSL_DetectionBall(boolean noInit) {}
    
    private static final SSL_DetectionBall defaultInstance;
    public static SSL_DetectionBall getDefaultInstance() {
      return defaultInstance;
    }
    
    public SSL_DetectionBall getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return network.message.ssl.SSLDetection.internal_static_proto_SSL_DetectionBall_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return network.message.ssl.SSLDetection.internal_static_proto_SSL_DetectionBall_fieldAccessorTable;
    }
    
    // required float confidence = 1;
    public static final int CONFIDENCE_FIELD_NUMBER = 1;
    private boolean hasConfidence;
    private float confidence_ = 0F;
    public boolean hasConfidence() { return hasConfidence; }
    public float getConfidence() { return confidence_; }
    
    // optional uint32 area = 2;
    public static final int AREA_FIELD_NUMBER = 2;
    private boolean hasArea;
    private int area_ = 0;
    public boolean hasArea() { return hasArea; }
    public int getArea() { return area_; }
    
    // required float x = 3;
    public static final int X_FIELD_NUMBER = 3;
    private boolean hasX;
    private float x_ = 0F;
    public boolean hasX() { return hasX; }
    public float getX() { return x_; }
    
    // required float y = 4;
    public static final int Y_FIELD_NUMBER = 4;
    private boolean hasY;
    private float y_ = 0F;
    public boolean hasY() { return hasY; }
    public float getY() { return y_; }
    
    // optional float z = 5;
    public static final int Z_FIELD_NUMBER = 5;
    private boolean hasZ;
    private float z_ = 0F;
    public boolean hasZ() { return hasZ; }
    public float getZ() { return z_; }
    
    // required float pixel_x = 6;
    public static final int PIXEL_X_FIELD_NUMBER = 6;
    private boolean hasPixelX;
    private float pixelX_ = 0F;
    public boolean hasPixelX() { return hasPixelX; }
    public float getPixelX() { return pixelX_; }
    
    // required float pixel_y = 7;
    public static final int PIXEL_Y_FIELD_NUMBER = 7;
    private boolean hasPixelY;
    private float pixelY_ = 0F;
    public boolean hasPixelY() { return hasPixelY; }
    public float getPixelY() { return pixelY_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasConfidence) return false;
      if (!hasX) return false;
      if (!hasY) return false;
      if (!hasPixelX) return false;
      if (!hasPixelY) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasConfidence()) {
        output.writeFloat(1, getConfidence());
      }
      if (hasArea()) {
        output.writeUInt32(2, getArea());
      }
      if (hasX()) {
        output.writeFloat(3, getX());
      }
      if (hasY()) {
        output.writeFloat(4, getY());
      }
      if (hasZ()) {
        output.writeFloat(5, getZ());
      }
      if (hasPixelX()) {
        output.writeFloat(6, getPixelX());
      }
      if (hasPixelY()) {
        output.writeFloat(7, getPixelY());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasConfidence()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, getConfidence());
      }
      if (hasArea()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getArea());
      }
      if (hasX()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, getX());
      }
      if (hasY()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, getY());
      }
      if (hasZ()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, getZ());
      }
      if (hasPixelX()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, getPixelX());
      }
      if (hasPixelY()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, getPixelY());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static network.message.ssl.SSLDetection.SSL_DetectionBall parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionBall parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionBall parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionBall parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionBall parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionBall parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionBall parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionBall parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionBall parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionBall parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(network.message.ssl.SSLDetection.SSL_DetectionBall prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private network.message.ssl.SSLDetection.SSL_DetectionBall result;
      
      // Construct using proto.SSLDetection.SSL_DetectionBall.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new network.message.ssl.SSLDetection.SSL_DetectionBall();
        return builder;
      }
      
      protected network.message.ssl.SSLDetection.SSL_DetectionBall internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new network.message.ssl.SSLDetection.SSL_DetectionBall();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return network.message.ssl.SSLDetection.SSL_DetectionBall.getDescriptor();
      }
      
      public network.message.ssl.SSLDetection.SSL_DetectionBall getDefaultInstanceForType() {
        return network.message.ssl.SSLDetection.SSL_DetectionBall.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public network.message.ssl.SSLDetection.SSL_DetectionBall build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private network.message.ssl.SSLDetection.SSL_DetectionBall buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public network.message.ssl.SSLDetection.SSL_DetectionBall buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        network.message.ssl.SSLDetection.SSL_DetectionBall returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof network.message.ssl.SSLDetection.SSL_DetectionBall) {
          return mergeFrom((network.message.ssl.SSLDetection.SSL_DetectionBall)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(network.message.ssl.SSLDetection.SSL_DetectionBall other) {
        if (other == network.message.ssl.SSLDetection.SSL_DetectionBall.getDefaultInstance()) return this;
        if (other.hasConfidence()) {
          setConfidence(other.getConfidence());
        }
        if (other.hasArea()) {
          setArea(other.getArea());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasZ()) {
          setZ(other.getZ());
        }
        if (other.hasPixelX()) {
          setPixelX(other.getPixelX());
        }
        if (other.hasPixelY()) {
          setPixelY(other.getPixelY());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 13: {
              setConfidence(input.readFloat());
              break;
            }
            case 16: {
              setArea(input.readUInt32());
              break;
            }
            case 29: {
              setX(input.readFloat());
              break;
            }
            case 37: {
              setY(input.readFloat());
              break;
            }
            case 45: {
              setZ(input.readFloat());
              break;
            }
            case 53: {
              setPixelX(input.readFloat());
              break;
            }
            case 61: {
              setPixelY(input.readFloat());
              break;
            }
          }
        }
      }
      
      
      // required float confidence = 1;
      public boolean hasConfidence() {
        return result.hasConfidence();
      }
      public float getConfidence() {
        return result.getConfidence();
      }
      public Builder setConfidence(float value) {
        result.hasConfidence = true;
        result.confidence_ = value;
        return this;
      }
      public Builder clearConfidence() {
        result.hasConfidence = false;
        result.confidence_ = 0F;
        return this;
      }
      
      // optional uint32 area = 2;
      public boolean hasArea() {
        return result.hasArea();
      }
      public int getArea() {
        return result.getArea();
      }
      public Builder setArea(int value) {
        result.hasArea = true;
        result.area_ = value;
        return this;
      }
      public Builder clearArea() {
        result.hasArea = false;
        result.area_ = 0;
        return this;
      }
      
      // required float x = 3;
      public boolean hasX() {
        return result.hasX();
      }
      public float getX() {
        return result.getX();
      }
      public Builder setX(float value) {
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder clearX() {
        result.hasX = false;
        result.x_ = 0F;
        return this;
      }
      
      // required float y = 4;
      public boolean hasY() {
        return result.hasY();
      }
      public float getY() {
        return result.getY();
      }
      public Builder setY(float value) {
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder clearY() {
        result.hasY = false;
        result.y_ = 0F;
        return this;
      }
      
      // optional float z = 5;
      public boolean hasZ() {
        return result.hasZ();
      }
      public float getZ() {
        return result.getZ();
      }
      public Builder setZ(float value) {
        result.hasZ = true;
        result.z_ = value;
        return this;
      }
      public Builder clearZ() {
        result.hasZ = false;
        result.z_ = 0F;
        return this;
      }
      
      // required float pixel_x = 6;
      public boolean hasPixelX() {
        return result.hasPixelX();
      }
      public float getPixelX() {
        return result.getPixelX();
      }
      public Builder setPixelX(float value) {
        result.hasPixelX = true;
        result.pixelX_ = value;
        return this;
      }
      public Builder clearPixelX() {
        result.hasPixelX = false;
        result.pixelX_ = 0F;
        return this;
      }
      
      // required float pixel_y = 7;
      public boolean hasPixelY() {
        return result.hasPixelY();
      }
      public float getPixelY() {
        return result.getPixelY();
      }
      public Builder setPixelY(float value) {
        result.hasPixelY = true;
        result.pixelY_ = value;
        return this;
      }
      public Builder clearPixelY() {
        result.hasPixelY = false;
        result.pixelY_ = 0F;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:proto.SSL_DetectionBall)
    }
    
    static {
      defaultInstance = new SSL_DetectionBall(true);
      network.message.ssl.SSLDetection.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:proto.SSL_DetectionBall)
  }
  
  public static final class SSL_DetectionRobot extends
      com.google.protobuf.GeneratedMessage {
    // Use SSL_DetectionRobot.newBuilder() to construct.
    private SSL_DetectionRobot() {
      initFields();
    }
    private SSL_DetectionRobot(boolean noInit) {}
    
    private static final SSL_DetectionRobot defaultInstance;
    public static SSL_DetectionRobot getDefaultInstance() {
      return defaultInstance;
    }
    
    public SSL_DetectionRobot getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return network.message.ssl.SSLDetection.internal_static_proto_SSL_DetectionRobot_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return network.message.ssl.SSLDetection.internal_static_proto_SSL_DetectionRobot_fieldAccessorTable;
    }
    
    // required float confidence = 1;
    public static final int CONFIDENCE_FIELD_NUMBER = 1;
    private boolean hasConfidence;
    private float confidence_ = 0F;
    public boolean hasConfidence() { return hasConfidence; }
    public float getConfidence() { return confidence_; }
    
    // optional uint32 robot_id = 2;
    public static final int ROBOT_ID_FIELD_NUMBER = 2;
    private boolean hasRobotId;
    private int robotId_ = 0;
    public boolean hasRobotId() { return hasRobotId; }
    public int getRobotId() { return robotId_; }
    
    // required float x = 3;
    public static final int X_FIELD_NUMBER = 3;
    private boolean hasX;
    private float x_ = 0F;
    public boolean hasX() { return hasX; }
    public float getX() { return x_; }
    
    // required float y = 4;
    public static final int Y_FIELD_NUMBER = 4;
    private boolean hasY;
    private float y_ = 0F;
    public boolean hasY() { return hasY; }
    public float getY() { return y_; }
    
    // optional float orientation = 5;
    public static final int ORIENTATION_FIELD_NUMBER = 5;
    private boolean hasOrientation;
    private float orientation_ = 0F;
    public boolean hasOrientation() { return hasOrientation; }
    public float getOrientation() { return orientation_; }
    
    // required float pixel_x = 6;
    public static final int PIXEL_X_FIELD_NUMBER = 6;
    private boolean hasPixelX;
    private float pixelX_ = 0F;
    public boolean hasPixelX() { return hasPixelX; }
    public float getPixelX() { return pixelX_; }
    
    // required float pixel_y = 7;
    public static final int PIXEL_Y_FIELD_NUMBER = 7;
    private boolean hasPixelY;
    private float pixelY_ = 0F;
    public boolean hasPixelY() { return hasPixelY; }
    public float getPixelY() { return pixelY_; }
    
    // optional float height = 8;
    public static final int HEIGHT_FIELD_NUMBER = 8;
    private boolean hasHeight;
    private float height_ = 0F;
    public boolean hasHeight() { return hasHeight; }
    public float getHeight() { return height_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasConfidence) return false;
      if (!hasX) return false;
      if (!hasY) return false;
      if (!hasPixelX) return false;
      if (!hasPixelY) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasConfidence()) {
        output.writeFloat(1, getConfidence());
      }
      if (hasRobotId()) {
        output.writeUInt32(2, getRobotId());
      }
      if (hasX()) {
        output.writeFloat(3, getX());
      }
      if (hasY()) {
        output.writeFloat(4, getY());
      }
      if (hasOrientation()) {
        output.writeFloat(5, getOrientation());
      }
      if (hasPixelX()) {
        output.writeFloat(6, getPixelX());
      }
      if (hasPixelY()) {
        output.writeFloat(7, getPixelY());
      }
      if (hasHeight()) {
        output.writeFloat(8, getHeight());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasConfidence()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, getConfidence());
      }
      if (hasRobotId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getRobotId());
      }
      if (hasX()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, getX());
      }
      if (hasY()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, getY());
      }
      if (hasOrientation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, getOrientation());
      }
      if (hasPixelX()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, getPixelX());
      }
      if (hasPixelY()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, getPixelY());
      }
      if (hasHeight()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, getHeight());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static network.message.ssl.SSLDetection.SSL_DetectionRobot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionRobot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionRobot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionRobot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionRobot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionRobot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionRobot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionRobot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionRobot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionRobot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(network.message.ssl.SSLDetection.SSL_DetectionRobot prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private network.message.ssl.SSLDetection.SSL_DetectionRobot result;
      
      // Construct using proto.SSLDetection.SSL_DetectionRobot.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new network.message.ssl.SSLDetection.SSL_DetectionRobot();
        return builder;
      }
      
      protected network.message.ssl.SSLDetection.SSL_DetectionRobot internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new network.message.ssl.SSLDetection.SSL_DetectionRobot();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return network.message.ssl.SSLDetection.SSL_DetectionRobot.getDescriptor();
      }
      
      public network.message.ssl.SSLDetection.SSL_DetectionRobot getDefaultInstanceForType() {
        return network.message.ssl.SSLDetection.SSL_DetectionRobot.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public network.message.ssl.SSLDetection.SSL_DetectionRobot build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private network.message.ssl.SSLDetection.SSL_DetectionRobot buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public network.message.ssl.SSLDetection.SSL_DetectionRobot buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        network.message.ssl.SSLDetection.SSL_DetectionRobot returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof network.message.ssl.SSLDetection.SSL_DetectionRobot) {
          return mergeFrom((network.message.ssl.SSLDetection.SSL_DetectionRobot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(network.message.ssl.SSLDetection.SSL_DetectionRobot other) {
        if (other == network.message.ssl.SSLDetection.SSL_DetectionRobot.getDefaultInstance()) return this;
        if (other.hasConfidence()) {
          setConfidence(other.getConfidence());
        }
        if (other.hasRobotId()) {
          setRobotId(other.getRobotId());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasOrientation()) {
          setOrientation(other.getOrientation());
        }
        if (other.hasPixelX()) {
          setPixelX(other.getPixelX());
        }
        if (other.hasPixelY()) {
          setPixelY(other.getPixelY());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 13: {
              setConfidence(input.readFloat());
              break;
            }
            case 16: {
              setRobotId(input.readUInt32());
              break;
            }
            case 29: {
              setX(input.readFloat());
              break;
            }
            case 37: {
              setY(input.readFloat());
              break;
            }
            case 45: {
              setOrientation(input.readFloat());
              break;
            }
            case 53: {
              setPixelX(input.readFloat());
              break;
            }
            case 61: {
              setPixelY(input.readFloat());
              break;
            }
            case 69: {
              setHeight(input.readFloat());
              break;
            }
          }
        }
      }
      
      
      // required float confidence = 1;
      public boolean hasConfidence() {
        return result.hasConfidence();
      }
      public float getConfidence() {
        return result.getConfidence();
      }
      public Builder setConfidence(float value) {
        result.hasConfidence = true;
        result.confidence_ = value;
        return this;
      }
      public Builder clearConfidence() {
        result.hasConfidence = false;
        result.confidence_ = 0F;
        return this;
      }
      
      // optional uint32 robot_id = 2;
      public boolean hasRobotId() {
        return result.hasRobotId();
      }
      public int getRobotId() {
        return result.getRobotId();
      }
      public Builder setRobotId(int value) {
        result.hasRobotId = true;
        result.robotId_ = value;
        return this;
      }
      public Builder clearRobotId() {
        result.hasRobotId = false;
        result.robotId_ = 0;
        return this;
      }
      
      // required float x = 3;
      public boolean hasX() {
        return result.hasX();
      }
      public float getX() {
        return result.getX();
      }
      public Builder setX(float value) {
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder clearX() {
        result.hasX = false;
        result.x_ = 0F;
        return this;
      }
      
      // required float y = 4;
      public boolean hasY() {
        return result.hasY();
      }
      public float getY() {
        return result.getY();
      }
      public Builder setY(float value) {
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder clearY() {
        result.hasY = false;
        result.y_ = 0F;
        return this;
      }
      
      // optional float orientation = 5;
      public boolean hasOrientation() {
        return result.hasOrientation();
      }
      public float getOrientation() {
        return result.getOrientation();
      }
      public Builder setOrientation(float value) {
        result.hasOrientation = true;
        result.orientation_ = value;
        return this;
      }
      public Builder clearOrientation() {
        result.hasOrientation = false;
        result.orientation_ = 0F;
        return this;
      }
      
      // required float pixel_x = 6;
      public boolean hasPixelX() {
        return result.hasPixelX();
      }
      public float getPixelX() {
        return result.getPixelX();
      }
      public Builder setPixelX(float value) {
        result.hasPixelX = true;
        result.pixelX_ = value;
        return this;
      }
      public Builder clearPixelX() {
        result.hasPixelX = false;
        result.pixelX_ = 0F;
        return this;
      }
      
      // required float pixel_y = 7;
      public boolean hasPixelY() {
        return result.hasPixelY();
      }
      public float getPixelY() {
        return result.getPixelY();
      }
      public Builder setPixelY(float value) {
        result.hasPixelY = true;
        result.pixelY_ = value;
        return this;
      }
      public Builder clearPixelY() {
        result.hasPixelY = false;
        result.pixelY_ = 0F;
        return this;
      }
      
      // optional float height = 8;
      public boolean hasHeight() {
        return result.hasHeight();
      }
      public float getHeight() {
        return result.getHeight();
      }
      public Builder setHeight(float value) {
        result.hasHeight = true;
        result.height_ = value;
        return this;
      }
      public Builder clearHeight() {
        result.hasHeight = false;
        result.height_ = 0F;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:proto.SSL_DetectionRobot)
    }
    
    static {
      defaultInstance = new SSL_DetectionRobot(true);
      network.message.ssl.SSLDetection.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:proto.SSL_DetectionRobot)
  }
  
  public static final class SSL_DetectionFrame extends
      com.google.protobuf.GeneratedMessage {
    // Use SSL_DetectionFrame.newBuilder() to construct.
    private SSL_DetectionFrame() {
      initFields();
    }
    private SSL_DetectionFrame(boolean noInit) {}
    
    private static final SSL_DetectionFrame defaultInstance;
    public static SSL_DetectionFrame getDefaultInstance() {
      return defaultInstance;
    }
    
    public SSL_DetectionFrame getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return network.message.ssl.SSLDetection.internal_static_proto_SSL_DetectionFrame_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return network.message.ssl.SSLDetection.internal_static_proto_SSL_DetectionFrame_fieldAccessorTable;
    }
    
    // required uint32 frame_number = 1;
    public static final int FRAME_NUMBER_FIELD_NUMBER = 1;
    private boolean hasFrameNumber;
    private int frameNumber_ = 0;
    public boolean hasFrameNumber() { return hasFrameNumber; }
    public int getFrameNumber() { return frameNumber_; }
    
    // required double t_capture = 2;
    public static final int T_CAPTURE_FIELD_NUMBER = 2;
    private boolean hasTCapture;
    private double tCapture_ = 0D;
    public boolean hasTCapture() { return hasTCapture; }
    public double getTCapture() { return tCapture_; }
    
    // required double t_sent = 3;
    public static final int T_SENT_FIELD_NUMBER = 3;
    private boolean hasTSent;
    private double tSent_ = 0D;
    public boolean hasTSent() { return hasTSent; }
    public double getTSent() { return tSent_; }
    
    // required uint32 camera_id = 4;
    public static final int CAMERA_ID_FIELD_NUMBER = 4;
    private boolean hasCameraId;
    private int cameraId_ = 0;
    public boolean hasCameraId() { return hasCameraId; }
    public int getCameraId() { return cameraId_; }
    
    // repeated .proto.SSL_DetectionBall balls = 5;
    public static final int BALLS_FIELD_NUMBER = 5;
    private java.util.List<network.message.ssl.SSLDetection.SSL_DetectionBall> balls_ =
      java.util.Collections.emptyList();
    public java.util.List<network.message.ssl.SSLDetection.SSL_DetectionBall> getBallsList() {
      return balls_;
    }
    public int getBallsCount() { return balls_.size(); }
    public network.message.ssl.SSLDetection.SSL_DetectionBall getBalls(int index) {
      return balls_.get(index);
    }
    
    // repeated .proto.SSL_DetectionRobot robots_yellow = 6;
    public static final int ROBOTS_YELLOW_FIELD_NUMBER = 6;
    private java.util.List<network.message.ssl.SSLDetection.SSL_DetectionRobot> robotsYellow_ =
      java.util.Collections.emptyList();
    public java.util.List<network.message.ssl.SSLDetection.SSL_DetectionRobot> getRobotsYellowList() {
      return robotsYellow_;
    }
    public int getRobotsYellowCount() { return robotsYellow_.size(); }
    public network.message.ssl.SSLDetection.SSL_DetectionRobot getRobotsYellow(int index) {
      return robotsYellow_.get(index);
    }
    
    // repeated .proto.SSL_DetectionRobot robots_blue = 7;
    public static final int ROBOTS_BLUE_FIELD_NUMBER = 7;
    private java.util.List<network.message.ssl.SSLDetection.SSL_DetectionRobot> robotsBlue_ =
      java.util.Collections.emptyList();
    public java.util.List<network.message.ssl.SSLDetection.SSL_DetectionRobot> getRobotsBlueList() {
      return robotsBlue_;
    }
    public int getRobotsBlueCount() { return robotsBlue_.size(); }
    public network.message.ssl.SSLDetection.SSL_DetectionRobot getRobotsBlue(int index) {
      return robotsBlue_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasFrameNumber) return false;
      if (!hasTCapture) return false;
      if (!hasTSent) return false;
      if (!hasCameraId) return false;
      for (network.message.ssl.SSLDetection.SSL_DetectionBall element : getBallsList()) {
        if (!element.isInitialized()) return false;
      }
      for (network.message.ssl.SSLDetection.SSL_DetectionRobot element : getRobotsYellowList()) {
        if (!element.isInitialized()) return false;
      }
      for (network.message.ssl.SSLDetection.SSL_DetectionRobot element : getRobotsBlueList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasFrameNumber()) {
        output.writeUInt32(1, getFrameNumber());
      }
      if (hasTCapture()) {
        output.writeDouble(2, getTCapture());
      }
      if (hasTSent()) {
        output.writeDouble(3, getTSent());
      }
      if (hasCameraId()) {
        output.writeUInt32(4, getCameraId());
      }
      for (network.message.ssl.SSLDetection.SSL_DetectionBall element : getBallsList()) {
        output.writeMessage(5, element);
      }
      for (network.message.ssl.SSLDetection.SSL_DetectionRobot element : getRobotsYellowList()) {
        output.writeMessage(6, element);
      }
      for (network.message.ssl.SSLDetection.SSL_DetectionRobot element : getRobotsBlueList()) {
        output.writeMessage(7, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasFrameNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getFrameNumber());
      }
      if (hasTCapture()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, getTCapture());
      }
      if (hasTSent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, getTSent());
      }
      if (hasCameraId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getCameraId());
      }
      for (network.message.ssl.SSLDetection.SSL_DetectionBall element : getBallsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      for (network.message.ssl.SSLDetection.SSL_DetectionRobot element : getRobotsYellowList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, element);
      }
      for (network.message.ssl.SSLDetection.SSL_DetectionRobot element : getRobotsBlueList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static network.message.ssl.SSLDetection.SSL_DetectionFrame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionFrame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionFrame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionFrame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionFrame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionFrame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionFrame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionFrame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionFrame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static network.message.ssl.SSLDetection.SSL_DetectionFrame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(network.message.ssl.SSLDetection.SSL_DetectionFrame prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private network.message.ssl.SSLDetection.SSL_DetectionFrame result;
      
      // Construct using proto.SSLDetection.SSL_DetectionFrame.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new network.message.ssl.SSLDetection.SSL_DetectionFrame();
        return builder;
      }
      
      protected network.message.ssl.SSLDetection.SSL_DetectionFrame internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new network.message.ssl.SSLDetection.SSL_DetectionFrame();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return network.message.ssl.SSLDetection.SSL_DetectionFrame.getDescriptor();
      }
      
      public network.message.ssl.SSLDetection.SSL_DetectionFrame getDefaultInstanceForType() {
        return network.message.ssl.SSLDetection.SSL_DetectionFrame.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public network.message.ssl.SSLDetection.SSL_DetectionFrame build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private network.message.ssl.SSLDetection.SSL_DetectionFrame buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public network.message.ssl.SSLDetection.SSL_DetectionFrame buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.balls_ != java.util.Collections.EMPTY_LIST) {
          result.balls_ =
            java.util.Collections.unmodifiableList(result.balls_);
        }
        if (result.robotsYellow_ != java.util.Collections.EMPTY_LIST) {
          result.robotsYellow_ =
            java.util.Collections.unmodifiableList(result.robotsYellow_);
        }
        if (result.robotsBlue_ != java.util.Collections.EMPTY_LIST) {
          result.robotsBlue_ =
            java.util.Collections.unmodifiableList(result.robotsBlue_);
        }
        network.message.ssl.SSLDetection.SSL_DetectionFrame returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof network.message.ssl.SSLDetection.SSL_DetectionFrame) {
          return mergeFrom((network.message.ssl.SSLDetection.SSL_DetectionFrame)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(network.message.ssl.SSLDetection.SSL_DetectionFrame other) {
        if (other == network.message.ssl.SSLDetection.SSL_DetectionFrame.getDefaultInstance()) return this;
        if (other.hasFrameNumber()) {
          setFrameNumber(other.getFrameNumber());
        }
        if (other.hasTCapture()) {
          setTCapture(other.getTCapture());
        }
        if (other.hasTSent()) {
          setTSent(other.getTSent());
        }
        if (other.hasCameraId()) {
          setCameraId(other.getCameraId());
        }
        if (!other.balls_.isEmpty()) {
          if (result.balls_.isEmpty()) {
            result.balls_ = new java.util.ArrayList<network.message.ssl.SSLDetection.SSL_DetectionBall>();
          }
          result.balls_.addAll(other.balls_);
        }
        if (!other.robotsYellow_.isEmpty()) {
          if (result.robotsYellow_.isEmpty()) {
            result.robotsYellow_ = new java.util.ArrayList<network.message.ssl.SSLDetection.SSL_DetectionRobot>();
          }
          result.robotsYellow_.addAll(other.robotsYellow_);
        }
        if (!other.robotsBlue_.isEmpty()) {
          if (result.robotsBlue_.isEmpty()) {
            result.robotsBlue_ = new java.util.ArrayList<network.message.ssl.SSLDetection.SSL_DetectionRobot>();
          }
          result.robotsBlue_.addAll(other.robotsBlue_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setFrameNumber(input.readUInt32());
              break;
            }
            case 17: {
              setTCapture(input.readDouble());
              break;
            }
            case 25: {
              setTSent(input.readDouble());
              break;
            }
            case 32: {
              setCameraId(input.readUInt32());
              break;
            }
            case 42: {
              network.message.ssl.SSLDetection.SSL_DetectionBall.Builder subBuilder = network.message.ssl.SSLDetection.SSL_DetectionBall.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addBalls(subBuilder.buildPartial());
              break;
            }
            case 50: {
              network.message.ssl.SSLDetection.SSL_DetectionRobot.Builder subBuilder = network.message.ssl.SSLDetection.SSL_DetectionRobot.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRobotsYellow(subBuilder.buildPartial());
              break;
            }
            case 58: {
              network.message.ssl.SSLDetection.SSL_DetectionRobot.Builder subBuilder = network.message.ssl.SSLDetection.SSL_DetectionRobot.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRobotsBlue(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required uint32 frame_number = 1;
      public boolean hasFrameNumber() {
        return result.hasFrameNumber();
      }
      public int getFrameNumber() {
        return result.getFrameNumber();
      }
      public Builder setFrameNumber(int value) {
        result.hasFrameNumber = true;
        result.frameNumber_ = value;
        return this;
      }
      public Builder clearFrameNumber() {
        result.hasFrameNumber = false;
        result.frameNumber_ = 0;
        return this;
      }
      
      // required double t_capture = 2;
      public boolean hasTCapture() {
        return result.hasTCapture();
      }
      public double getTCapture() {
        return result.getTCapture();
      }
      public Builder setTCapture(double value) {
        result.hasTCapture = true;
        result.tCapture_ = value;
        return this;
      }
      public Builder clearTCapture() {
        result.hasTCapture = false;
        result.tCapture_ = 0D;
        return this;
      }
      
      // required double t_sent = 3;
      public boolean hasTSent() {
        return result.hasTSent();
      }
      public double getTSent() {
        return result.getTSent();
      }
      public Builder setTSent(double value) {
        result.hasTSent = true;
        result.tSent_ = value;
        return this;
      }
      public Builder clearTSent() {
        result.hasTSent = false;
        result.tSent_ = 0D;
        return this;
      }
      
      // required uint32 camera_id = 4;
      public boolean hasCameraId() {
        return result.hasCameraId();
      }
      public int getCameraId() {
        return result.getCameraId();
      }
      public Builder setCameraId(int value) {
        result.hasCameraId = true;
        result.cameraId_ = value;
        return this;
      }
      public Builder clearCameraId() {
        result.hasCameraId = false;
        result.cameraId_ = 0;
        return this;
      }
      
      // repeated .proto.SSL_DetectionBall balls = 5;
      public java.util.List<network.message.ssl.SSLDetection.SSL_DetectionBall> getBallsList() {
        return java.util.Collections.unmodifiableList(result.balls_);
      }
      public int getBallsCount() {
        return result.getBallsCount();
      }
      public network.message.ssl.SSLDetection.SSL_DetectionBall getBalls(int index) {
        return result.getBalls(index);
      }
      public Builder setBalls(int index, network.message.ssl.SSLDetection.SSL_DetectionBall value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.balls_.set(index, value);
        return this;
      }
      public Builder setBalls(int index, network.message.ssl.SSLDetection.SSL_DetectionBall.Builder builderForValue) {
        result.balls_.set(index, builderForValue.build());
        return this;
      }
      public Builder addBalls(network.message.ssl.SSLDetection.SSL_DetectionBall value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.balls_.isEmpty()) {
          result.balls_ = new java.util.ArrayList<network.message.ssl.SSLDetection.SSL_DetectionBall>();
        }
        result.balls_.add(value);
        return this;
      }
      public Builder addBalls(network.message.ssl.SSLDetection.SSL_DetectionBall.Builder builderForValue) {
        if (result.balls_.isEmpty()) {
          result.balls_ = new java.util.ArrayList<network.message.ssl.SSLDetection.SSL_DetectionBall>();
        }
        result.balls_.add(builderForValue.build());
        return this;
      }
      public Builder addAllBalls(
          java.lang.Iterable<? extends network.message.ssl.SSLDetection.SSL_DetectionBall> values) {
        if (result.balls_.isEmpty()) {
          result.balls_ = new java.util.ArrayList<network.message.ssl.SSLDetection.SSL_DetectionBall>();
        }
        super.addAll(values, result.balls_);
        return this;
      }
      public Builder clearBalls() {
        result.balls_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .proto.SSL_DetectionRobot robots_yellow = 6;
      public java.util.List<network.message.ssl.SSLDetection.SSL_DetectionRobot> getRobotsYellowList() {
        return java.util.Collections.unmodifiableList(result.robotsYellow_);
      }
      public int getRobotsYellowCount() {
        return result.getRobotsYellowCount();
      }
      public network.message.ssl.SSLDetection.SSL_DetectionRobot getRobotsYellow(int index) {
        return result.getRobotsYellow(index);
      }
      public Builder setRobotsYellow(int index, network.message.ssl.SSLDetection.SSL_DetectionRobot value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.robotsYellow_.set(index, value);
        return this;
      }
      public Builder setRobotsYellow(int index, network.message.ssl.SSLDetection.SSL_DetectionRobot.Builder builderForValue) {
        result.robotsYellow_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRobotsYellow(network.message.ssl.SSLDetection.SSL_DetectionRobot value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.robotsYellow_.isEmpty()) {
          result.robotsYellow_ = new java.util.ArrayList<network.message.ssl.SSLDetection.SSL_DetectionRobot>();
        }
        result.robotsYellow_.add(value);
        return this;
      }
      public Builder addRobotsYellow(network.message.ssl.SSLDetection.SSL_DetectionRobot.Builder builderForValue) {
        if (result.robotsYellow_.isEmpty()) {
          result.robotsYellow_ = new java.util.ArrayList<network.message.ssl.SSLDetection.SSL_DetectionRobot>();
        }
        result.robotsYellow_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRobotsYellow(
          java.lang.Iterable<? extends network.message.ssl.SSLDetection.SSL_DetectionRobot> values) {
        if (result.robotsYellow_.isEmpty()) {
          result.robotsYellow_ = new java.util.ArrayList<network.message.ssl.SSLDetection.SSL_DetectionRobot>();
        }
        super.addAll(values, result.robotsYellow_);
        return this;
      }
      public Builder clearRobotsYellow() {
        result.robotsYellow_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .proto.SSL_DetectionRobot robots_blue = 7;
      public java.util.List<network.message.ssl.SSLDetection.SSL_DetectionRobot> getRobotsBlueList() {
        return java.util.Collections.unmodifiableList(result.robotsBlue_);
      }
      public int getRobotsBlueCount() {
        return result.getRobotsBlueCount();
      }
      public network.message.ssl.SSLDetection.SSL_DetectionRobot getRobotsBlue(int index) {
        return result.getRobotsBlue(index);
      }
      public Builder setRobotsBlue(int index, network.message.ssl.SSLDetection.SSL_DetectionRobot value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.robotsBlue_.set(index, value);
        return this;
      }
      public Builder setRobotsBlue(int index, network.message.ssl.SSLDetection.SSL_DetectionRobot.Builder builderForValue) {
        result.robotsBlue_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRobotsBlue(network.message.ssl.SSLDetection.SSL_DetectionRobot value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.robotsBlue_.isEmpty()) {
          result.robotsBlue_ = new java.util.ArrayList<network.message.ssl.SSLDetection.SSL_DetectionRobot>();
        }
        result.robotsBlue_.add(value);
        return this;
      }
      public Builder addRobotsBlue(network.message.ssl.SSLDetection.SSL_DetectionRobot.Builder builderForValue) {
        if (result.robotsBlue_.isEmpty()) {
          result.robotsBlue_ = new java.util.ArrayList<network.message.ssl.SSLDetection.SSL_DetectionRobot>();
        }
        result.robotsBlue_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRobotsBlue(
          java.lang.Iterable<? extends network.message.ssl.SSLDetection.SSL_DetectionRobot> values) {
        if (result.robotsBlue_.isEmpty()) {
          result.robotsBlue_ = new java.util.ArrayList<network.message.ssl.SSLDetection.SSL_DetectionRobot>();
        }
        super.addAll(values, result.robotsBlue_);
        return this;
      }
      public Builder clearRobotsBlue() {
        result.robotsBlue_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:proto.SSL_DetectionFrame)
    }
    
    static {
      defaultInstance = new SSL_DetectionFrame(true);
      network.message.ssl.SSLDetection.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:proto.SSL_DetectionFrame)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_SSL_DetectionBall_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_SSL_DetectionBall_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_SSL_DetectionRobot_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_SSL_DetectionRobot_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_SSL_DetectionFrame_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_SSL_DetectionFrame_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n$messages_robocup_ssl_detection.proto\022\005" +
      "proto\"x\n\021SSL_DetectionBall\022\022\n\nconfidence" +
      "\030\001 \002(\002\022\014\n\004area\030\002 \001(\r\022\t\n\001x\030\003 \002(\002\022\t\n\001y\030\004 \002" +
      "(\002\022\t\n\001z\030\005 \001(\002\022\017\n\007pixel_x\030\006 \002(\002\022\017\n\007pixel_" +
      "y\030\007 \002(\002\"\227\001\n\022SSL_DetectionRobot\022\022\n\nconfid" +
      "ence\030\001 \002(\002\022\020\n\010robot_id\030\002 \001(\r\022\t\n\001x\030\003 \002(\002\022" +
      "\t\n\001y\030\004 \002(\002\022\023\n\013orientation\030\005 \001(\002\022\017\n\007pixel" +
      "_x\030\006 \002(\002\022\017\n\007pixel_y\030\007 \002(\002\022\016\n\006height\030\010 \001(" +
      "\002\"\353\001\n\022SSL_DetectionFrame\022\024\n\014frame_number" +
      "\030\001 \002(\r\022\021\n\tt_capture\030\002 \002(\001\022\016\n\006t_sent\030\003 \002(",
      "\001\022\021\n\tcamera_id\030\004 \002(\r\022\'\n\005balls\030\005 \003(\0132\030.pr" +
      "oto.SSL_DetectionBall\0220\n\rrobots_yellow\030\006" +
      " \003(\0132\031.proto.SSL_DetectionRobot\022.\n\013robot" +
      "s_blue\030\007 \003(\0132\031.proto.SSL_DetectionRobotB" +
      "\016B\014SSLDetection"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_proto_SSL_DetectionBall_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_proto_SSL_DetectionBall_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_proto_SSL_DetectionBall_descriptor,
              new java.lang.String[] { "Confidence", "Area", "X", "Y", "Z", "PixelX", "PixelY", },
              network.message.ssl.SSLDetection.SSL_DetectionBall.class,
              network.message.ssl.SSLDetection.SSL_DetectionBall.Builder.class);
          internal_static_proto_SSL_DetectionRobot_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_proto_SSL_DetectionRobot_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_proto_SSL_DetectionRobot_descriptor,
              new java.lang.String[] { "Confidence", "RobotId", "X", "Y", "Orientation", "PixelX", "PixelY", "Height", },
              network.message.ssl.SSLDetection.SSL_DetectionRobot.class,
              network.message.ssl.SSLDetection.SSL_DetectionRobot.Builder.class);
          internal_static_proto_SSL_DetectionFrame_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_proto_SSL_DetectionFrame_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_proto_SSL_DetectionFrame_descriptor,
              new java.lang.String[] { "FrameNumber", "TCapture", "TSent", "CameraId", "Balls", "RobotsYellow", "RobotsBlue", },
              network.message.ssl.SSLDetection.SSL_DetectionFrame.class,
              network.message.ssl.SSLDetection.SSL_DetectionFrame.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
