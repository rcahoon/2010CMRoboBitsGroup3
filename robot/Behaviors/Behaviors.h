#ifndef BEHAVIORS_H_
#define BEHAVIORS_H_

#include "shared/UsefulMacros.h"

class RobotState;
class GameState;
class VisionFeatures;
class WorldFeatures;
class Pose;
class Messages;
class Command;
class Feedback;

/**
 * Interface for Behaviors component.
 */
class Behaviors {
public:
  /**
   * Default constructor (empty since this is an interface).
   */
  Behaviors() {};

  /**
   * Destructor (empty since this is an interface).
   */
  virtual ~Behaviors() {};

  /**
   * Runs the Behaviors component, which returns a Command, Feedback, and may
   * update the MessageList.
   *
   * @param robotState state of the robot (e.g., timestamp, camera image)
   * @param gameState state of the game (e.g., ready, playing, penalized)
   * @param visionFeatures objects detected by Vision component
   * @param worldFeatures objects modelled by World Model component
   * @param pose pose of the robot (global position/orientation)
   * @param messages messages received from other robots, humans, and messages to be sent
   * @param command command that is generated by behaviors
   * @param feedback feedback that is generated by behaviors
   * @return whether an error occurred (false = everything is fine)
   */
  virtual bool run(const RobotState     & robotState,
                   const GameState      & gameState,
                   const VisionFeatures & visionFeatures,
                   const WorldFeatures  & worldFeatures,
                   const Pose           & pose,
                         Messages       & messages,
                         Command        & command,
                         Feedback       & feedback) = 0;
private:
  PREVENT_COPY_AND_ASSIGNMENT(Behaviors);
};

#endif /* BEHAVIORS_H_ */
