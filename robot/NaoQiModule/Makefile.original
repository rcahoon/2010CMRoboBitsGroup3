EXTENSION=.cpp


SOURCES?=$(shell find ./src -type f \( -name *.cc -or -name *.cpp \) )  
SOURCES+=$(shell find ../Agent -type f \( -name *.cc -or -name *.cpp \) )  

SOURCES+=$(shell find ../shared -type f \( -name *.cc -or -name *.cpp \) )  
SOURCES+=$(shell find ../Factory -type f \( -name *.cc -or -name *.cpp \) )  
SOURCES+=$(shell find ../Behaviors -type f \( -name *.cc -or -name *.cpp \) )  
SOURCES+=$(shell find ../Comm -type f \( -name *.cc -or -name *.cpp \) )  
SOURCES+=$(shell find ../GameController -type f \( -name *.cc -or -name *.cpp \) )  
SOURCES+=$(shell find ../Log -type f \( -name *.cc -or -name *.cpp \) )  
SOURCES+=$(shell find ../Localization -type f \( -name *.cc -or -name *.cpp \) )  
SOURCES+=$(shell find ../Vision -type f \( -name *.cc -or -name *.cpp \) )  
SOURCES+=$(shell find ../WorldModel -type f \( -name *.cc -or -name *.cpp \) )  
SOURCES+=$(shell find ../Motion -type f \( -name *.cc -or -name *.cpp \) )  



HEADERS?=$(shell find ./src -type f -name *.h )
HEADERS+=$(shell find ../ -type f -name *.h )

CFLAGS= --sysroot $(CTC_DIR)/staging/geode-linux/ -Wall -g -fPIC -march=geode

LFLAGS=--sysroot $(CTC_DIR)/staging/geode-linux/ \
	-lgcc -L$(CTC_DIR)/cross/geode/i586-linux/lib/ -lc -lstdc++ -ldl -lrt -lpthread -lz \
	-Wl,--sysroot $(CTC_DIR)/staging/geode-linux/


INCLUDES=  \
	-I$(CTC_DIR)/staging/geode-linux/usr/include/ \
	-I$(CTC_DIR)/staging/geode-linux/usr/include/libthread/ \
	-I$(CTC_DIR)/staging/geode-linux/usr/include/alvalue/ \
	-I$(CTC_DIR)/staging/geode-linux/usr/include/alfactory/ \
	-I$(CTC_DIR)/cross/geode/lib/gcc/i586-linux/4.3.3/include/ \
	-I$(CTC_DIR)/cross/geode/i586-linux/include/c++/ \
	-I$(CTC_DIR)/cross/geode/i586-linux/include/c++/i586-linux/ \
	-I$(CTC_DIR)/staging/geode-linux/usr/include/c++/ \
	-I$(CTC_DIR)/staging/geode-linux/usr/include/c++/i486-linux/ \
	-I$(CTC_DIR)/staging/geode-linux/usr/include/python2.5/ \
	-I$(AL_DIR)/include/alcommon \
	-I$(AL_DIR)/include/altools \
	-I$(AL_DIR)/include/alcore \
	-I$(AL_DIR)/include/alproxies \
	-I../ \
	-I../Agent \
	-I../shared

LIBS= \
	-rdynamic -L$(AL_DIR)/lib \
	-L$(CTC_DIR)/staging/geode-linux/usr/lib \
	-L$(AL_DIR)/lib \
	-L$(AL_DIR)/lib/static \
	-Wl,-Bstatic -ltinyxml -Wl,-Bdynamic -llibcore -lalcommon -lalvalue -lpthread -llibthread -Wl,-Bstatic -Wl,-Bdynamic -lboost_signals-mt -lboost_serialization-mt -lpython2.6 \
	-Wl,-rpath,$(AL_DIR)/lib:$(CTC_DIR)/staging/geode-linux/usr/lib:$(AL_DIR)/lib

CXX=${CTC_DIR}/cross/geode/bin/i586-linux-g++

OBJS = $(SOURCES:$(EXTENSION)=.o)

DEPENDS=

LIB=bin/libcmurfs.so

%.o: %$(EXTENSION) $(HEADERS) $(DEPENDS)
	$(CXX) $(CFLAGS) $(INCLUDES) -o $@ -c $< $(DEFINES)

$(LIB): $(OBJS) $(DEPENDS)
	rm -rf ./bin
	mkdir ./bin
	$(CXX) -shared -Wl,--no-undefined $(LFLAGS) -o $(LIB) $(OBJS) $(LIBS)
	@echo =========================================
	@echo ====== CMurfs NaoQi Module Created ======
	@echo =========================================

all: $(LIB)

clean: 
	rm -f $(OBJS)
	rm -rf ./bin
	rm -f $(LIB)

localinstall: $(LIB)
	cp $(LIB) $(AL_DIR)/lib/naoqi/

install: $(LIB)
	scp $(LIB) nao@$(NAO_IP):/home/nao/naoqi/lib/naoqi/

